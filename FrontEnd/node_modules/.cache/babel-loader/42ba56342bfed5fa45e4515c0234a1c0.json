{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport { createStandaloneToast, LightMode } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport CustomButton from \"../../components/button\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\"; // import socketIOClient from \"socket.io-client\";\n\nimport { config } from \"../../config\";\nimport useSocketContext from \"../../context/socketContext\";\nconst {\n  url\n} = config; // const ENDPOINT = url;\n// let socket;\n\nconst Thumbometer = () => {\n  _s();\n\n  // const [speakerView, setSpeakerView] = useState();\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"white\", \"white\");\n  const context = useSocketContext();\n  const socket = context[0];\n  console.log(socket);\n\n  async function handleSubmit({\n    sessionData\n  }) {\n    //https://callback-cats.herokuapp.com/session\n    console.log(sessionData);\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sessionData)\n    }); //check the status of the data that is returned. If not 200 then its an error!\n    //will add a toast pop up here\n\n    if (res.status === 200) {\n      //calls the toast function to create a success popup\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\"\n      });\n      console.log(\"Success: session data posted\");\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\"\n      });\n    }\n  }\n\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true\n    });\n    console.log(error);\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  const name = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name;\n  const [myRole, setMyRole] = useState(role);\n  useEffect(() => {\n    const item = localStorage.getItem(\"role\");\n    setMyRole(item);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"role\", myRole);\n  }, [myRole]);\n  useEffect(() => {\n    // socket = socketIOClient(ENDPOINT);\n    // socket.emit(\"connection\");\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: name,\n      //take from auth\n      role: role,\n      room: \"thumbometer\"\n    }); //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n    //start thumb session listener - destructures data and timer, sets state\n\n    socket.on(\"startThumb\", ({\n      sessionData,\n      timer\n    }) => {\n      setData(sessionData);\n      setTime(timer);\n      console.log(\"start thumb recieved\");\n    });\n    socket.on(\"thumbUpdate\", ({\n      sessionData\n    }) => {\n      setData(sessionData);\n      console.log(\"thumb updated\");\n    });\n    socket.on(\"counter\", counter => {\n      setCount(counter);\n      console.log(counter);\n    }); //finished listener - sets final data state\n\n    socket.on(\"finished\", ({\n      sessionData\n    }) => {\n      setData(sessionData);\n      console.log(\"finished session\");\n      console.log({\n        sessionData\n      }); //call function that posts to session table\n      //success or burnt toast\n\n      role === \"coach\" && name === sessionData.coach && handleSubmit({\n        sessionData\n      }); //disable slider here - state\n\n      setCount(0);\n    }); // return () => socket.disconnect();\n  }, []); //hand this function down to speaker view - pass in q and timer\n\n  function startSession({\n    question,\n    timer,\n    throwaway\n  }) {\n    socket.emit(\"start\", {\n      question,\n      timer,\n      name,\n      throwaway\n    });\n    console.log(\"started session\");\n  } //function to stop the timer and end the session - pass this down to speaker view\n\n\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  } //pass down & call in ppt view - saves sessionData object\n\n\n  function submitData(val) {\n    socket.emit(\"submission\", {\n      value: val\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.container,\n      bg: bg,\n      color: color,\n      h: \"50%\",\n      w: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.heading,\n          children: \"Thumb-O-Meter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        className: styles.backButton,\n        children: /*#__PURE__*/_jsxDEV(CustomButton, {\n          link: \"/\",\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 40\n          }, this),\n          text: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(LightMode, {\n          children: [myRole !== \"bootcamper\" && /*#__PURE__*/_jsxDEV(SkView, {\n            data: data,\n            startSession: startSession,\n            endSession: endSession,\n            count: count,\n            time: time,\n            setTime: setTime,\n            bg: bg,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), myRole === \"bootcamper\" && /*#__PURE__*/_jsxDEV(PtView, {\n            data: data,\n            submit: submitData,\n            time: time,\n            count: count,\n            bg: bg,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thumbometer, \"P2Sm2xfDCGP+6Jr1M/Aoc5xnfus=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useSocketContext, useRoleContext];\n});\n\n_c = Thumbometer;\nexport default Thumbometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thumbometer\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js"],"names":["React","useState","useEffect","NavBar","styles","PtView","SkView","createStandaloneToast","LightMode","useRoleContext","CustomButton","ArrowBackIcon","useLocalStorage","Flex","Box","Center","useColorModeValue","config","useSocketContext","url","Thumbometer","data","setData","time","setTime","count","setCount","bg","color","context","socket","console","log","handleSubmit","sessionData","res","fetch","method","headers","body","JSON","stringify","status","successToast","name","message","burntToast","successObject","toast","title","description","duration","isClosable","error","result","role","loggedUser","given_name","myRole","setMyRole","item","localStorage","getItem","setItem","emit","room","on","timer","counter","coach","startSession","question","throwaway","endSession","submitData","val","value","container","heading","backButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport { createStandaloneToast, LightMode } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport CustomButton from \"../../components/button\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\n// import socketIOClient from \"socket.io-client\";\nimport { config } from \"../../config\";\nimport useSocketContext from \"../../context/socketContext\";\nconst { url } = config;\n// const ENDPOINT = url;\n// let socket;\n\nconst Thumbometer = () => {\n  // const [speakerView, setSpeakerView] = useState();\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"white\", \"white\");\n  const context = useSocketContext();\n  const socket = context[0];\n  console.log(socket);\n  async function handleSubmit({ sessionData }) {\n    //https://callback-cats.herokuapp.com/session\n    console.log(sessionData);\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(sessionData),\n    });\n\n    //check the status of the data that is returned. If not 200 then its an error!\n    //will add a toast pop up here\n    if (res.status === 200) {\n      //calls the toast function to create a success popup\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\",\n      });\n      console.log(\"Success: session data posted\");\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\",\n      });\n    }\n  }\n\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true,\n    });\n    console.log(error);\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  const [myRole, setMyRole] = useState(role);\n\n  useEffect(() => {\n    const item = localStorage.getItem(\"role\");\n    setMyRole(item);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"role\", myRole);\n  }, [myRole]);\n\n  useEffect(() => {\n    // socket = socketIOClient(ENDPOINT);\n    // socket.emit(\"connection\");\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: name, //take from auth\n      role: role,\n      room: \"thumbometer\",\n    });\n\n    //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n\n    //start thumb session listener - destructures data and timer, sets state\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\n      setData(sessionData);\n      setTime(timer);\n      console.log(\"start thumb recieved\");\n    });\n\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"thumb updated\");\n    });\n\n    socket.on(\"counter\", (counter) => {\n      setCount(counter);\n      console.log(counter);\n    });\n\n    //finished listener - sets final data state\n    socket.on(\"finished\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"finished session\");\n      console.log({ sessionData });\n      //call function that posts to session table\n      //success or burnt toast\n      role === \"coach\" &&\n        name === sessionData.coach &&\n        handleSubmit({ sessionData });\n      //disable slider here - state\n      setCount(0);\n    });\n\n    // return () => socket.disconnect();\n  }, []);\n\n  //hand this function down to speaker view - pass in q and timer\n  function startSession({ question, timer, throwaway }) {\n    socket.emit(\"start\", { question, timer, name, throwaway });\n    console.log(\"started session\");\n  }\n\n  //function to stop the timer and end the session - pass this down to speaker view\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  }\n  //pass down & call in ppt view - saves sessionData object\n  function submitData(val) {\n    socket.emit(\"submission\", { value: val });\n  }\n\n  return (\n    <Flex>\n      <Box className={styles.container} bg={bg} color={color} h=\"50%\" w=\"100%\">\n        <NavBar />\n        <Center>\n          <h1 className={styles.heading}>Thumb-O-Meter</h1>\n        </Center>\n        <Center className={styles.backButton}>\n          <CustomButton link=\"/\" icon={<ArrowBackIcon />} text={\"Back\"} />\n        </Center>\n\n        <Center>\n          <LightMode>\n            {myRole !== \"bootcamper\" && (\n              <SkView\n                data={data}\n                startSession={startSession}\n                endSession={endSession}\n                count={count}\n                time={time}\n                setTime={setTime}\n                bg={bg}\n                color={color}\n              />\n            )}\n            {myRole === \"bootcamper\" && (\n              <PtView\n                data={data}\n                submit={submitData}\n                time={time}\n                count={count}\n                bg={bg}\n                color={color}\n              />\n            )}\n          </LightMode>\n        </Center>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Thumbometer;\n"]},"metadata":{},"sourceType":"module"}