{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport Thumb from \"../thumb\";\nimport { Slider, SliderTrack, SliderFilledTrack, SliderThumb } from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { MdPeople } from \"react-icons/md\";\nimport Timer from \"../timer/index\";\n\nfunction PtView({\n  data,\n  submit,\n  time,\n  count\n}) {\n  _s();\n\n  // display the question\n  // rotatable thumb\n  // slider\n  // slider value\n  // timer\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    if (count > 0) {\n      submit(value);\n    }\n  }, [value]); // slider.addEventListener(\"change\", () => {\n  //   sliderVal.innerText = `Value: ${slider.value}`;\n  //   socket.emit(\"submission\", { value: slider.value });\n  // });\n\n  return (\n    /*#__PURE__*/\n    // <div className={style.container}>\n    //   <h1>{data.question}</h1>\n    //   <Thumb value={value} />\n    //   <Slider\n    //     aria-label=\"slider-ex-1\"\n    //     defaultValue={30}\n    //     onChangeEnd={(val) => setValue(val)}\n    //     isDisabled={count > 0 ? false : true}\n    //   >\n    //     <SliderTrack>\n    //       <SliderFilledTrack />\n    //     </SliderTrack>\n    //     <SliderThumb />\n    //   </Slider>\n    //   <h3>Value: {value}%</h3>\n    //   <p>\n    //     {data.responses}/{data.participants} {<Icon as={MdPeople} />}\n    //   </p>\n    //   <p>{count}</p>\n    //   <Timer count={count} time={time} />\n    // </div>\n    //  );\n    //}\n    _jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: styles.title,\n        children: [\" \", data.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.players,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(Thumb, {\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"slider-ex-1\",\n            defaultValue: 30,\n            onChangeEnd: val => setValue(val),\n            isDisabled: count > 0 ? false : true,\n            children: [/*#__PURE__*/_jsxDEV(SliderTrack, {\n              children: /*#__PURE__*/_jsxDEV(SliderFilledTrack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SliderThumb, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Value: \", value, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [data.responses, \"/\", data.participants, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n              as: MdPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          count: count,\n          time: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(PtView, \"QEMGEmq5Rfwf2KLuWFF3dZYTA2c=\");\n\n_c = PtView;\nexport default PtView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtView\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js"],"names":["React","useState","useEffect","styles","Thumb","Slider","SliderTrack","SliderFilledTrack","SliderThumb","Icon","MdPeople","Timer","PtView","data","submit","time","count","value","setValue","container","title","question","players","val","responses","participants"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,WAJF,QAKO,kBALP;AAMA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA;AAAtB,CAAhB,EAA+C;AAAA;;AAC7C;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAK,GAAG,CAAZ,EAAe;AACbF,MAAAA,MAAM,CAACG,KAAD,CAAN;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT,CAT6C,CAe7C;AACA;AACA;AACA;;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACgB,SAAvB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAEhB,MAAM,CAACiB,KAA1B;AAAA,wBAAmCP,IAAI,CAACQ,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB,OAAvB;AAAA,gCACE;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEL;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,0BAAW,aADb;AAEE,YAAA,YAAY,EAAE,EAFhB;AAGE,YAAA,WAAW,EAAGM,GAAD,IAASL,QAAQ,CAACK,GAAD,CAHhC;AAIE,YAAA,UAAU,EAAEP,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB,IAJlC;AAAA,oCAME,QAAC,WAAD;AAAA,qCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE;AAAA,kCAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA,uBACGJ,IAAI,CAACW,SADR,OACoBX,IAAI,CAACY,YADzB,oBACwC,QAAC,IAAD;AAAM,cAAA,EAAE,EAAEf;AAAV;AAAA;AAAA;AAAA;AAAA,oBADxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAiBE;AAAA,sBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA,KAAd;AAAqB,UAAA,IAAI,EAAED;AAA3B;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBF;AAmDD;;GAvEQH,M;;KAAAA,M;AAyET,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  // display the question\r\n  // rotatable thumb\r\n  // slider\r\n  // slider value\r\n  // timer\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n\r\n  // slider.addEventListener(\"change\", () => {\r\n  //   sliderVal.innerText = `Value: ${slider.value}`;\r\n  //   socket.emit(\"submission\", { value: slider.value });\r\n  // });\r\n\r\n  return (\r\n    // <div className={style.container}>\r\n    //   <h1>{data.question}</h1>\r\n    //   <Thumb value={value} />\r\n    //   <Slider\r\n    //     aria-label=\"slider-ex-1\"\r\n    //     defaultValue={30}\r\n    //     onChangeEnd={(val) => setValue(val)}\r\n    //     isDisabled={count > 0 ? false : true}\r\n    //   >\r\n    //     <SliderTrack>\r\n    //       <SliderFilledTrack />\r\n    //     </SliderTrack>\r\n    //     <SliderThumb />\r\n    //   </Slider>\r\n    //   <h3>Value: {value}%</h3>\r\n    //   <p>\r\n    //     {data.responses}/{data.participants} {<Icon as={MdPeople} />}\r\n    //   </p>\r\n    //   <p>{count}</p>\r\n    //   <Timer count={count} time={time} />\r\n    // </div>\r\n    //  );\r\n    //}\r\n\r\n    <div className={styles.container}>\r\n      <header className={styles.title}> {data.question}</header>\r\n      <div className={styles.players}>\r\n        <section>\r\n          <Thumb value={value} />\r\n          <Slider\r\n            aria-label=\"slider-ex-1\"\r\n            defaultValue={30}\r\n            onChangeEnd={(val) => setValue(val)}\r\n            isDisabled={count > 0 ? false : true}\r\n          >\r\n            <SliderTrack>\r\n              <SliderFilledTrack />\r\n            </SliderTrack>\r\n            <SliderThumb />\r\n          </Slider>\r\n          <h3>Value: {value}%</h3>\r\n          <p>\r\n            {data.responses}/{data.participants} {<Icon as={MdPeople} />}\r\n          </p>\r\n          <p>{count}</p>\r\n        </section>\r\n        <Timer count={count} time={time} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n"]},"metadata":{},"sourceType":"module"}