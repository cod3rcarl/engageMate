{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/spotify/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport SpotifyButton from \"../../components/button/spotifyButton\";\nimport { config } from \"../../config\";\nimport style from \"./spotify.module.css\";\n\nfunction Spotify() {\n  _s();\n\n  const id = config.spotifyID;\n  const secret = config.spotifySecret;\n  const [playlist, setPlaylist] = useState({});\n  const [url, setUrl] = useState(\"\");\n  const [playlistIndex, setPlaylistIndex] = useState(Math.floor(Math.random() * 50));\n  const [genre, setGenre] = useState(\"workout\");\n  const [station, setStation] = useState(\"Squat FM\");\n\n  function newGenre(genre, station) {\n    setGenre(genre);\n    setStation(station);\n    handleClick();\n  }\n\n  console.log(genre);\n\n  function handleClick() {\n    setPlaylistIndex(Math.floor(Math.random() * 50));\n    console.log(playlistIndex);\n  }\n\n  useEffect(() => {\n    async function getTunes() {\n      const authOptions = {\n        url: \"https://accounts.spotify.com/api/token\",\n        headers: {\n          Authorization: \"Basic \" + Buffer.from(id + \":\" + secret).toString(\"base64\")\n        },\n        form: {\n          grant_type: \"client_credentials\"\n        },\n        json: true\n      };\n      request.post(authOptions, async function (error, response, body) {\n        if (!error && response.statusCode === 200) {\n          // use the access token to access the Spotify Web API\n          const token = body.access_token;\n          const options = {\n            //url: `https://api.spotify.com/v1/search?q=artist%3Amichael%20jackson&type=album`,\n            url: `https://api.spotify.com/v1/browse/categories/${genre}/playlists?country=US&limit=50`,\n            headers: {\n              Authorization: \"Bearer \" + token\n            },\n            json: true\n          };\n          request.get(options, async function (error, response, body) {\n            console.log(body); //const playlist = body.playlists.items[playlistIndex];\n            // const newPlaylist = {\n            //   description: playlist.description,\n            //   name: playlist.name,\n            //   images: playlist.images[0].url,\n            //   tracks: playlist.tracks.href,\n            //   uri: playlist.uri.slice(17),\n            // };\n            // setPlaylist(newPlaylist);\n            //playlist.uri &&\n\n            setUrl(`https://open.spotify.com/embed/playlist/37i9dQZF1DWUPafHP1BJw1`);\n          });\n        }\n      });\n    }\n\n    getTunes();\n  }, [playlistIndex, genre, id, secret]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.players,\n      children: url ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"playlist\",\n        src: url // https://open.spotify.com/embed/playlist/spotify:playlist:37i9dQZF1DX76Wlfdnj7AP\n        ,\n        width: \"300\",\n        height: \"540\",\n        frameBorder: \"0\",\n        allowtransparency: \"true\",\n        allow: \"encrypted-media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Spotify, \"AT860YZ9OPsl+bY+FX7PSiXL/w4=\");\n\n_c = Spotify;\nexport default Spotify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spotify\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/spotify/index.js"],"names":["React","useEffect","useState","request","SpotifyButton","config","style","Spotify","id","spotifyID","secret","spotifySecret","playlist","setPlaylist","url","setUrl","playlistIndex","setPlaylistIndex","Math","floor","random","genre","setGenre","station","setStation","newGenre","handleClick","console","log","getTunes","authOptions","headers","Authorization","Buffer","from","toString","form","grant_type","json","post","error","response","body","statusCode","token","access_token","options","get","players"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,EAAE,GAAGH,MAAM,CAACI,SAAlB;AACA,QAAMC,MAAM,GAAGL,MAAM,CAACM,aAAtB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAChDgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CADgD,CAAlD;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,SAAD,CAAlC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,UAAD,CAAtC;;AAEA,WAASuB,QAAT,CAAkBJ,KAAlB,EAAyBE,OAAzB,EAAkC;AAChCD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,WAAW;AACZ;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,WAASK,WAAT,GAAuB;AACrBT,IAAAA,gBAAgB,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,aAAZ;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe4B,QAAf,GAA0B;AACxB,YAAMC,WAAW,GAAG;AAClBhB,QAAAA,GAAG,EAAE,wCADa;AAElBiB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX,WAAWC,MAAM,CAACC,IAAP,CAAY1B,EAAE,GAAG,GAAL,GAAWE,MAAvB,EAA+ByB,QAA/B,CAAwC,QAAxC;AAFN,SAFS;AAMlBC,QAAAA,IAAI,EAAE;AACJC,UAAAA,UAAU,EAAE;AADR,SANY;AASlBC,QAAAA,IAAI,EAAE;AATY,OAApB;AAYAnC,MAAAA,OAAO,CAACoC,IAAR,CAAaT,WAAb,EAA0B,gBAAeU,KAAf,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsC;AAC9D,YAAI,CAACF,KAAD,IAAUC,QAAQ,CAACE,UAAT,KAAwB,GAAtC,EAA2C;AACzC;AACA,gBAAMC,KAAK,GAAGF,IAAI,CAACG,YAAnB;AACA,gBAAMC,OAAO,GAAG;AACd;AACAhC,YAAAA,GAAG,EAAG,gDAA+CO,KAAM,gCAF7C;AAGdU,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE,YAAYY;AADpB,aAHK;AAMdN,YAAAA,IAAI,EAAE;AANQ,WAAhB;AAQAnC,UAAAA,OAAO,CAAC4C,GAAR,CAAYD,OAAZ,EAAqB,gBAAeN,KAAf,EAAsBC,QAAtB,EAAgCC,IAAhC,EAAsC;AACzDf,YAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ,EADyD,CAGzD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA3B,YAAAA,MAAM,CACH,gEADG,CAAN;AAGD,WAlBD;AAmBD;AACF,OAhCD;AAiCD;;AACDc,IAAAA,QAAQ;AACT,GAjDQ,EAiDN,CAACb,aAAD,EAAgBK,KAAhB,EAAuBb,EAAvB,EAA2BE,MAA3B,CAjDM,CAAT;AAmDA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAAC0C,OAAtB;AAAA,gBACGlC,GAAG,gBACF;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,GAAG,EAAEA,GAFP,CAGE;AAHF;AAIE,QAAA,KAAK,EAAC,KAJR;AAKE,QAAA,MAAM,EAAC,KALT;AAME,QAAA,WAAW,EAAC,GANd;AAOE,QAAA,iBAAiB,EAAC,MAPpB;AAQE,QAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA,cADE,gBAYF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GAnGQP,O;;KAAAA,O;AAqGT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport SpotifyButton from \"../../components/button/spotifyButton\";\nimport { config } from \"../../config\";\nimport style from \"./spotify.module.css\";\n\nfunction Spotify() {\n  const id = config.spotifyID;\n  const secret = config.spotifySecret;\n\n  const [playlist, setPlaylist] = useState({});\n  const [url, setUrl] = useState(\"\");\n  const [playlistIndex, setPlaylistIndex] = useState(\n    Math.floor(Math.random() * 50)\n  );\n  const [genre, setGenre] = useState(\"workout\");\n  const [station, setStation] = useState(\"Squat FM\");\n\n  function newGenre(genre, station) {\n    setGenre(genre);\n    setStation(station);\n    handleClick();\n  }\n  console.log(genre);\n  function handleClick() {\n    setPlaylistIndex(Math.floor(Math.random() * 50));\n    console.log(playlistIndex);\n  }\n\n  useEffect(() => {\n    async function getTunes() {\n      const authOptions = {\n        url: \"https://accounts.spotify.com/api/token\",\n        headers: {\n          Authorization:\n            \"Basic \" + Buffer.from(id + \":\" + secret).toString(\"base64\"),\n        },\n        form: {\n          grant_type: \"client_credentials\",\n        },\n        json: true,\n      };\n\n      request.post(authOptions, async function(error, response, body) {\n        if (!error && response.statusCode === 200) {\n          // use the access token to access the Spotify Web API\n          const token = body.access_token;\n          const options = {\n            //url: `https://api.spotify.com/v1/search?q=artist%3Amichael%20jackson&type=album`,\n            url: `https://api.spotify.com/v1/browse/categories/${genre}/playlists?country=US&limit=50`,\n            headers: {\n              Authorization: \"Bearer \" + token,\n            },\n            json: true,\n          };\n          request.get(options, async function(error, response, body) {\n            console.log(body);\n\n            //const playlist = body.playlists.items[playlistIndex];\n\n            // const newPlaylist = {\n            //   description: playlist.description,\n            //   name: playlist.name,\n            //   images: playlist.images[0].url,\n            //   tracks: playlist.tracks.href,\n            //   uri: playlist.uri.slice(17),\n            // };\n\n            // setPlaylist(newPlaylist);\n            //playlist.uri &&\n            setUrl(\n              `https://open.spotify.com/embed/playlist/37i9dQZF1DWUPafHP1BJw1`\n            );\n          });\n        }\n      });\n    }\n    getTunes();\n  }, [playlistIndex, genre, id, secret]);\n\n  return (\n    <>\n      <div className={style.players}>\n        {url ? (\n          <iframe\n            title=\"playlist\"\n            src={url}\n            // https://open.spotify.com/embed/playlist/spotify:playlist:37i9dQZF1DX76Wlfdnj7AP\n            width=\"300\"\n            height=\"540\"\n            frameBorder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          ></iframe>\n        ) : (\n          <h1>Loading</h1>\n        )}\n        {/* <SpotifyButton\n          myClass={style.myPlaylistBtn}\n          handleClick={handleClick}\n          station={\"New Playlist\"}\n        />{\" \"} */}\n      </div>\n    </>\n  );\n}\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}