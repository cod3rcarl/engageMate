{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst RoleContext = /*#__PURE__*/createContext(undefined);\nexport function RoleProvider({\n  children\n}) {\n  _s();\n\n  const [role, setRole] = useState(\"\"); //const { user } = useAuth0();\n\n  const [loggedUser, setLoggedUser] = useState(\"\"); //const [result, setResult] = useState(\"\");\n\n  function myRole(string) {\n    setRole(string);\n  }\n\n  function myUser(obj) {\n    setLoggedUser(obj);\n  } // useEffect(() => {\n  //   async function getUsers() {\n  //     // setLoggedUser(user);\n  //     const data = await fetch(\n  //       `https://callback-cats.herokuapp.com/users`\n  //     );\n  //     const response = await data.json();\n  //     setResult(response);\n  //   }\n  //   getUsers();\n  //   //loggedUser is the Auth0 information\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(RoleContext.Provider, {\n    value: [role, myRole, loggedUser, myUser],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoleProvider, \"J1nEPurS2TvSfKzE7UWRVL/wAI0=\");\n\n_c = RoleProvider;\nexport default function useRoleContext() {\n  _s2();\n\n  return useContext(RoleContext);\n}\n\n_s2(useRoleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleProvider\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js"],"names":["React","useState","createContext","useContext","useEffect","useAuth0","RoleContext","undefined","RoleProvider","children","role","setRole","loggedUser","setLoggedUser","myRole","string","myUser","obj","useRoleContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAACK,SAAD,CAAjC;AAEA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CADyC,CAEzC;;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAHyC,CAIzC;;AACA,WAASa,MAAT,CAAgBC,MAAhB,EAAwB;AACtBJ,IAAAA,OAAO,CAACI,MAAD,CAAP;AACD;;AACD,WAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBJ,IAAAA,aAAa,CAACI,GAAD,CAAb;AACD,GAVwC,CAWzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACP,IAAD,EAAOI,MAAP,EAAeF,UAAf,EAA2BI,MAA3B,CAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA9BeD,Y;;KAAAA,Y;AAgChB,eAAe,SAASU,cAAT,GAA0B;AAAA;;AACvC,SAAOf,UAAU,CAACG,WAAD,CAAjB;AACD;;IAFuBY,c","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst RoleContext = createContext(undefined);\n\nexport function RoleProvider({ children }) {\n  const [role, setRole] = useState(\"\");\n  //const { user } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(\"\");\n  //const [result, setResult] = useState(\"\");\n  function myRole(string) {\n    setRole(string);\n  }\n  function myUser(obj) {\n    setLoggedUser(obj);\n  }\n  // useEffect(() => {\n  //   async function getUsers() {\n  //     // setLoggedUser(user);\n  //     const data = await fetch(\n  //       `https://callback-cats.herokuapp.com/users`\n  //     );\n  //     const response = await data.json();\n  //     setResult(response);\n  //   }\n  //   getUsers();\n\n  //   //loggedUser is the Auth0 information\n  // }, []);\n\n  return (\n    <RoleContext.Provider value={[role, myRole, loggedUser, myUser]}>\n      {children}\n    </RoleContext.Provider>\n  );\n}\n\nexport default function useRoleContext() {\n  return useContext(RoleContext);\n}\n"]},"metadata":{},"sourceType":"module"}