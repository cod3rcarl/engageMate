{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\nimport socketIOClient from \"socket.io-client\";\nconst url = process.env.REACT_APP_url;\nconst ENDPOINT = \"https://callback-cats.herokuapp.com\";\nlet socket;\n\nconst Thumbometer = () => {\n  _s();\n\n  // const [speakerView, setSpeakerView] = useState();\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n\n  async function handleSubmit({\n    sessionData\n  }) {\n    //https://callback-cats.herokuapp.com/session\n    console.log(sessionData);\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sessionData)\n    }); //check the status of the data that is returned. If not 200 then its an error!\n    //will add a toast pop up here\n\n    if (res.status === 200) {\n      //calls the toast function to create a success popup\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\"\n      });\n      console.log(\"Success: session data posted\");\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\"\n      });\n    }\n  }\n\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true\n    });\n    console.log(error);\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  console.log(role);\n  console.log(loggedUser);\n  useEffect(() => {\n    socket = socketIOClient(ENDPOINT);\n    socket.emit(\"connection\"); //join room request - get name, role from auth\n\n    socket.emit(\"joinroom\", {\n      name: loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name,\n      //take from auth\n      role: role,\n      room: \"thumbometer\"\n    }); //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n    //start thumb session listener - destructures data and timer, sets state\n\n    socket.on(\"startThumb\", ({\n      sessionData,\n      timer\n    }) => {\n      setData(sessionData);\n      setTime(timer);\n      console.log(\"start thumb recieved\");\n    });\n    socket.on(\"thumbUpdate\", ({\n      sessionData\n    }) => {\n      setData(sessionData);\n      console.log(\"thumb updated\");\n    });\n    socket.on(\"counter\", counter => {\n      setCount(counter);\n      console.log(counter);\n    }); //finished listener - sets final data state\n\n    socket.on(\"finished\", ({\n      sessionData\n    }) => {\n      setData(sessionData);\n      console.log(\"finished session\");\n      console.log({\n        sessionData\n      }); //call function that posts to session table\n      //success or burnt toast\n\n      role === \"coach\" && handleSubmit({\n        sessionData\n      }); //disable slider here - state\n\n      setCount(0);\n    });\n    return () => socket.disconnect();\n  }, []); //hand this function down to speaker view - pass in q and timer\n\n  function startSession({\n    question,\n    timer\n  }) {\n    socket.emit(\"start\", {\n      question,\n      timer\n    });\n    console.log(\"started session\");\n  } //function to stop the timer and end the session - pass this down to speaker view\n\n\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  } //pass down & call in ppt view - saves sessionData object\n\n\n  function submitData(val) {\n    socket.emit(\"submission\", {\n      value: val\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.container,\n      bg: bg,\n      color: color,\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.heading,\n            children: \"Thumb-O-Meter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Center, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: [role !== \"bootcamper\" && /*#__PURE__*/_jsxDEV(SkView, {\n            data: data,\n            startSession: startSession,\n            endSession: endSession,\n            count: count,\n            time: time,\n            setTime: setTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), role === \"bootcamper\" && /*#__PURE__*/_jsxDEV(PtView, {\n            data: data,\n            submit: submitData,\n            time: time,\n            count: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thumbometer, \"6tqEV3D8vdvawZrUl95Jy7z7bV8=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useRoleContext];\n});\n\n_c = Thumbometer;\nexport default Thumbometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thumbometer\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js"],"names":["React","useState","useEffect","NavBar","styles","PtView","SkView","createStandaloneToast","useRoleContext","Flex","Box","Center","useColorModeValue","socketIOClient","url","process","env","REACT_APP_url","ENDPOINT","socket","Thumbometer","data","setData","time","setTime","count","setCount","bg","color","handleSubmit","sessionData","console","log","res","fetch","method","headers","body","JSON","stringify","status","successToast","name","message","burntToast","successObject","toast","title","description","duration","isClosable","error","result","role","loggedUser","emit","given_name","room","on","timer","counter","disconnect","startSession","question","endSession","submitData","val","value","container","heading"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,iBAA5B,QAAqD,kBAArD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AACA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,IAAIC,MAAJ;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM0B,EAAE,GAAGf,iBAAiB,CAAC,OAAD,EAAU,SAAV,CAA5B;AACA,QAAMgB,KAAK,GAAGhB,iBAAiB,CAAC,SAAD,EAAY,OAAZ,CAA/B;;AAEA,iBAAeiB,YAAf,CAA4B;AAAEC,IAAAA;AAAF,GAA5B,EAA6C;AAC3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEpB,GAAI,UAAR,EAAmB;AACxCqB,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF+B;AAGxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AAHkC,KAAnB,CAAvB,CAH2C,CAS3C;AACA;;AACA,QAAIG,GAAG,CAACO,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACAC,MAAAA,YAAY,CAAC;AACXC,QAAAA,IAAI,EAAE,yBADK;AAEXC,QAAAA,OAAO,EAAE;AAFE,OAAD,CAAZ;AAIAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KAPD,MAOO;AACLY,MAAAA,UAAU,CAAC;AACTF,QAAAA,IAAI,EAAE,2BADG;AAETC,QAAAA,OAAO,EAAE;AAFA,OAAD,CAAV;AAID;AACF;;AAED,WAASF,YAAT,CAAsBI,aAAtB,EAAqC;AACnC,UAAMC,KAAK,GAAGvC,qBAAqB,EAAnC;AACAuC,IAAAA,KAAK,CAAC;AACJC,MAAAA,KAAK,EAAEF,aAAa,CAACH,IADjB;AAEJM,MAAAA,WAAW,EAAEH,aAAa,CAACF,OAFvB;AAGJH,MAAAA,MAAM,EAAE,SAHJ;AAIJS,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,UAAU,EAAE;AALR,KAAD,CAAL;AAOD;;AAED,WAASN,UAAT,CAAoBO,KAApB,EAA2B;AACzB,UAAML,KAAK,GAAGvC,qBAAqB,EAAnC;AACAuC,IAAAA,KAAK,CAAC;AACJC,MAAAA,KAAK,EAAEI,KAAK,CAACT,IADT;AAEJM,MAAAA,WAAW,EAAEG,KAAK,CAACR,OAFf;AAGJH,MAAAA,MAAM,EAAE,OAHJ;AAIJS,MAAAA,QAAQ,EAAE,KAJN;AAKJC,MAAAA,UAAU,EAAE;AALR,KAAD,CAAL;AAOAnB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACD;;AAED,QAAMC,MAAM,GAAG5C,cAAc,EAA7B;AACA,QAAM6C,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAnB;AACA,QAAME,UAAU,GAAGF,MAAM,CAAC,CAAD,CAAzB;AACArB,EAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,UAAZ;AAEApD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,GAAGN,cAAc,CAACK,QAAD,CAAvB;AACAC,IAAAA,MAAM,CAACoC,IAAP,CAAY,YAAZ,EAFc,CAGd;;AACApC,IAAAA,MAAM,CAACoC,IAAP,CAAY,UAAZ,EAAwB;AACtBb,MAAAA,IAAI,EAAEY,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEE,UADI;AACQ;AAC9BH,MAAAA,IAAI,EAAEA,IAFgB;AAGtBI,MAAAA,IAAI,EAAE;AAHgB,KAAxB,EAJc,CAUd;AACA;AAEA;;AACAtC,IAAAA,MAAM,CAACuC,EAAP,CAAU,YAAV,EAAwB,CAAC;AAAE5B,MAAAA,WAAF;AAAe6B,MAAAA;AAAf,KAAD,KAA4B;AAClDrC,MAAAA,OAAO,CAACQ,WAAD,CAAP;AACAN,MAAAA,OAAO,CAACmC,KAAD,CAAP;AACA5B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAJD;AAMAb,IAAAA,MAAM,CAACuC,EAAP,CAAU,aAAV,EAAyB,CAAC;AAAE5B,MAAAA;AAAF,KAAD,KAAqB;AAC5CR,MAAAA,OAAO,CAACQ,WAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAHD;AAKAb,IAAAA,MAAM,CAACuC,EAAP,CAAU,SAAV,EAAsBE,OAAD,IAAa;AAChClC,MAAAA,QAAQ,CAACkC,OAAD,CAAR;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,OAAZ;AACD,KAHD,EAzBc,CA8Bd;;AACAzC,IAAAA,MAAM,CAACuC,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAE5B,MAAAA;AAAF,KAAD,KAAqB;AACzCR,MAAAA,OAAO,CAACQ,WAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA;AAAF,OAAZ,EAHyC,CAIzC;AACA;;AACAuB,MAAAA,IAAI,KAAK,OAAT,IAAoBxB,YAAY,CAAC;AAAEC,QAAAA;AAAF,OAAD,CAAhC,CANyC,CAOzC;;AACAJ,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KATD;AAWA,WAAO,MAAMP,MAAM,CAAC0C,UAAP,EAAb;AACD,GA3CQ,EA2CN,EA3CM,CAAT,CA/DwB,CA4GxB;;AACA,WAASC,YAAT,CAAsB;AAAEC,IAAAA,QAAF;AAAYJ,IAAAA;AAAZ,GAAtB,EAA2C;AACzCxC,IAAAA,MAAM,CAACoC,IAAP,CAAY,OAAZ,EAAqB;AAAEQ,MAAAA,QAAF;AAAYJ,MAAAA;AAAZ,KAArB;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAhHuB,CAkHxB;;;AACA,WAASgC,UAAT,GAAsB;AACpB7C,IAAAA,MAAM,CAACoC,IAAP,CAAY,WAAZ;AACD,GArHuB,CAsHxB;;;AACA,WAASU,UAAT,CAAoBC,GAApB,EAAyB;AACvB/C,IAAAA,MAAM,CAACoC,IAAP,CAAY,YAAZ,EAA0B;AAAEY,MAAAA,KAAK,EAAED;AAAT,KAA1B;AACD;;AAED,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAE9D,MAAM,CAACgE,SAAvB;AAAkC,MAAA,EAAE,EAAEzC,EAAtC;AAA0C,MAAA,KAAK,EAAEC,KAAjD;AAAA,6BACE;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,iCACE;AAAI,YAAA,SAAS,EAAExB,MAAM,CAACiE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBALF,eAeE,QAAC,MAAD;AAAA,qBACGhB,IAAI,KAAK,YAAT,iBACC,QAAC,MAAD;AACE,YAAA,IAAI,EAAEhC,IADR;AAEE,YAAA,YAAY,EAAEyC,YAFhB;AAGE,YAAA,UAAU,EAAEE,UAHd;AAIE,YAAA,KAAK,EAAEvC,KAJT;AAKE,YAAA,IAAI,EAAEF,IALR;AAME,YAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAWG6B,IAAI,KAAK,YAAT,iBACC,QAAC,MAAD;AACE,YAAA,IAAI,EAAEhC,IADR;AAEE,YAAA,MAAM,EAAE4C,UAFV;AAGE,YAAA,IAAI,EAAE1C,IAHR;AAIE,YAAA,KAAK,EAAEE;AAJT;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CArKD;;GAAML,W;UAKOR,iB,EACGA,iB,EAmDCJ,c;;;KAzDXY,W;AAuKN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport styles from \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\n\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\nimport socketIOClient from \"socket.io-client\";\nconst url = process.env.REACT_APP_url;\nconst ENDPOINT = \"https://callback-cats.herokuapp.com\";\nlet socket;\n\nconst Thumbometer = () => {\n  // const [speakerView, setSpeakerView] = useState();\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"#110042\", \"white\");\n\n  async function handleSubmit({ sessionData }) {\n    //https://callback-cats.herokuapp.com/session\n    console.log(sessionData);\n    const res = await fetch(`${url}/session`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(sessionData),\n    });\n\n    //check the status of the data that is returned. If not 200 then its an error!\n    //will add a toast pop up here\n    if (res.status === 200) {\n      //calls the toast function to create a success popup\n      successToast({\n        name: \"Session Submit Success.\",\n        message: \"successfully submitted data from the session.\",\n      });\n      console.log(\"Success: session data posted\");\n    } else {\n      burntToast({\n        name: \"Failed Session Submission\",\n        message: \"failed to submit session data to the database.\",\n      });\n    }\n  }\n\n  function successToast(successObject) {\n    const toast = createStandaloneToast();\n    toast({\n      title: successObject.name,\n      description: successObject.message,\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  }\n\n  function burntToast(error) {\n    const toast = createStandaloneToast();\n    toast({\n      title: error.name,\n      description: error.message,\n      status: \"error\",\n      duration: 10000,\n      isClosable: true,\n    });\n    console.log(error);\n  }\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  console.log(role);\n  console.log(loggedUser);\n\n  useEffect(() => {\n    socket = socketIOClient(ENDPOINT);\n    socket.emit(\"connection\");\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: loggedUser?.given_name, //take from auth\n      role: role,\n      room: \"thumbometer\",\n    });\n\n    //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n\n    //start thumb session listener - destructures data and timer, sets state\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\n      setData(sessionData);\n      setTime(timer);\n      console.log(\"start thumb recieved\");\n    });\n\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"thumb updated\");\n    });\n\n    socket.on(\"counter\", (counter) => {\n      setCount(counter);\n      console.log(counter);\n    });\n\n    //finished listener - sets final data state\n    socket.on(\"finished\", ({ sessionData }) => {\n      setData(sessionData);\n      console.log(\"finished session\");\n      console.log({ sessionData });\n      //call function that posts to session table\n      //success or burnt toast\n      role === \"coach\" && handleSubmit({ sessionData });\n      //disable slider here - state\n      setCount(0);\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  //hand this function down to speaker view - pass in q and timer\n  function startSession({ question, timer }) {\n    socket.emit(\"start\", { question, timer });\n    console.log(\"started session\");\n  }\n\n  //function to stop the timer and end the session - pass this down to speaker view\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  }\n  //pass down & call in ppt view - saves sessionData object\n  function submitData(val) {\n    socket.emit(\"submission\", { value: val });\n  }\n\n  return (\n    <Flex>\n      <Box className={styles.container} bg={bg} color={color}>\n        <main>\n          <NavBar />\n          <Center>\n            <h1 className={styles.heading}>Thumb-O-Meter</h1>\n          </Center>\n          <Center>\n            {/* instead of the button we want to render either participant view or speaker view based on the role of the user */}\n            {/* <Button\n              className={styles.button}\n              bg=\"#7f56f2\"\n              onClick={() => setSpeakerView(!speakerView)}\n            >\n              {speakerView ? \"Show ptView\" : \"Show skView\"}\n            </Button> */}\n          </Center>\n          <Center>\n            {role !== \"bootcamper\" && (\n              <SkView\n                data={data}\n                startSession={startSession}\n                endSession={endSession}\n                count={count}\n                time={time}\n                setTime={setTime}\n              />\n            )}\n            {role === \"bootcamper\" && (\n              <PtView\n                data={data}\n                submit={submitData}\n                time={time}\n                count={count}\n              />\n            )}\n          </Center>\n        </main>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Thumbometer;\n"]},"metadata":{},"sourceType":"module"}