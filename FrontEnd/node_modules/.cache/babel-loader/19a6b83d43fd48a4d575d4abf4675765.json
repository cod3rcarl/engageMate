{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport Thumb from \"../thumb\";\nimport { Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack } from \"@chakra-ui/react\";\nimport { Icon, Box } from \"@chakra-ui/react\";\nimport { MdPeople } from \"react-icons/md\";\nimport Timer from \"../timer/index\";\n\nfunction PtView({\n  data,\n  submit,\n  time,\n  count\n}) {\n  _s();\n\n  // display the question\n  // rotatable thumb\n  // slider\n  // slider value\n  // timer\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    if (count > 0) {\n      submit(value);\n    }\n  }, [value]); // slider.addEventListener(\"change\", () => {\n  //   sliderVal.innerText = `Value: ${slider.value}`;\n  //   socket.emit(\"submission\", { value: slider.value });\n  // });\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.title,\n      children: [\" \", data.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.players,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            className: styles.thumb,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Thumb, {\n              value: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Value: \", value, \"%\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.responses,\n                  children: [data.responses, \"/\", data.participants, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n                    as: MdPeople\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Slider, {\n              \"aria-label\": \"slider-ex-1\",\n              defaultValue: 30,\n              onChangeEnd: val => setValue(val),\n              isDisabled: count > 0 ? false : true,\n              children: [/*#__PURE__*/_jsxDEV(SliderTrack, {\n                children: /*#__PURE__*/_jsxDEV(SliderFilledTrack, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SliderThumb, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          count: count,\n          time: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PtView, \"QEMGEmq5Rfwf2KLuWFF3dZYTA2c=\");\n\n_c = PtView;\nexport default PtView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtView\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js"],"names":["React","useState","useEffect","styles","Thumb","Slider","SliderTrack","SliderFilledTrack","SliderThumb","VStack","Icon","Box","MdPeople","Timer","PtView","data","submit","time","count","value","setValue","title","question","container","players","thumb","responses","participants","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon, Box } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  // display the question\r\n  // rotatable thumb\r\n  // slider\r\n  // slider value\r\n  // timer\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n\r\n  // slider.addEventListener(\"change\", () => {\r\n  //   sliderVal.innerText = `Value: ${slider.value}`;\r\n  //   socket.emit(\"submission\", { value: slider.value });\r\n  // });\r\n\r\n  return (\r\n    <VStack>\r\n      {\" \"}\r\n      <header className={styles.title}> {data.question}</header>\r\n      <div className={styles.container}>\r\n        <div className={styles.players}>\r\n          <section>\r\n            <VStack className={styles.thumb}>\r\n              {\" \"}\r\n              <Thumb value={value} />\r\n              <>\r\n                <p>\r\n                  Value: {value}%{\" \"}\r\n                  <span className={styles.responses}>\r\n                    {data.responses}/{data.participants}{\" \"}\r\n                    {<Icon as={MdPeople} />}\r\n                  </span>\r\n                  <span>{count}</span>\r\n                </p>\r\n              </>\r\n            </VStack>\r\n\r\n            <section>\r\n              {\" \"}\r\n              <Slider\r\n                aria-label=\"slider-ex-1\"\r\n                defaultValue={30}\r\n                onChangeEnd={(val) => setValue(val)}\r\n                isDisabled={count > 0 ? false : true}\r\n              >\r\n                <SliderTrack>\r\n                  <SliderFilledTrack />\r\n                </SliderTrack>\r\n                <SliderThumb />\r\n              </Slider>\r\n            </section>\r\n          </section>\r\n          <Timer count={count} time={time} />\r\n        </div>\r\n      </div>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n"]},"metadata":{},"sourceType":"module"}