{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = socketIOClient(ENDPOINT);\n\nconst Thumbometer = () => {\n  _s();\n\n  const [response, setResponse] = useState(\"\");\n  const [speakerView, setSpeakerView] = useState(true);\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    socket.emit(\"connection\"); //join room request - get name, role from auth\n\n    socket.emit(\"joinroom\", {\n      name: \"Ben\",\n      //take from auth\n      role: \"coach\",\n      room: \"thumbometer\"\n    }); //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n    //start thumb session listener - destructures data and timer, sets state\n\n    socket.on(\"startThumb\", ({\n      sessionData,\n      timer\n    }) => {\n      setData(sessionData);\n      setTime(timer);\n    });\n    socket.on(\"thumbUpdate\", ({\n      sessionData\n    }) => {\n      setData(sessionData);\n    });\n    socket.on(\"counter\", counter => {\n      setCount(counter);\n    }); //finished listener - sets final data state\n\n    socket.on(\"finished\", ({\n      sessionData\n    }) => {\n      setData(sessionData); //disable slider here - state\n    });\n    return () => socket.disconnect();\n  }, []); //hand this function down to speaker view - pass in q and timer\n\n  function startSession({\n    question,\n    timer\n  }) {\n    socket.emit(\"start\", {\n      question,\n      timer\n    });\n  } //function to stop the timer and end the session - pass this down to speaker view\n\n\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  } //pass down & call in ppt view - saves sessionData object\n\n\n  function submitData(val) {\n    socket.emit(\"submission\", {\n      value: val\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Thumbometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), speakerView && /*#__PURE__*/_jsxDEV(SkView, {\n      data: data,\n      start: startSession,\n      end: endSession,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), !speakerView && /*#__PURE__*/_jsxDEV(PtView, {\n      data: data,\n      submit: submitData,\n      time: time,\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thumbometer, \"K3JbUAEf8nQoJf4Qi6+CszxHcB4=\");\n\n_c = Thumbometer;\nexport default Thumbometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thumbometer\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/thumb-o-meter/index.js"],"names":["React","useState","useEffect","NavBar","PtView","SkView","socketIOClient","ENDPOINT","socket","Thumbometer","response","setResponse","speakerView","setSpeakerView","data","setData","time","setTime","count","setCount","emit","name","role","room","on","sessionData","timer","counter","disconnect","startSession","question","endSession","submitData","val","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport \"./index.module.css\";\nimport PtView from \"../../components/ptView\";\nimport SkView from \"../../components/skView\";\n\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:5000\";\nconst socket = socketIOClient(ENDPOINT);\n\nconst Thumbometer = () => {\n  const [response, setResponse] = useState(\"\");\n  const [speakerView, setSpeakerView] = useState(true);\n  const [data, setData] = useState({});\n  const [time, setTime] = useState(0);\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    socket.emit(\"connection\");\n    //join room request - get name, role from auth\n    socket.emit(\"joinroom\", {\n      name: \"Ben\", //take from auth\n      role: \"coach\",\n      room: \"thumbometer\",\n    });\n\n    //listen for thumb update, take in session data\n    //useEffect - pass down session data obj\n\n    //start thumb session listener - destructures data and timer, sets state\n    socket.on(\"startThumb\", ({ sessionData, timer }) => {\n      setData(sessionData);\n      setTime(timer);\n    });\n\n    socket.on(\"thumbUpdate\", ({ sessionData }) => {\n      setData(sessionData);\n    });\n\n    socket.on(\"counter\", (counter) => {\n      setCount(counter);\n    });\n\n    //finished listener - sets final data state\n    socket.on(\"finished\", ({ sessionData }) => {\n      setData(sessionData);\n      //disable slider here - state\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  //hand this function down to speaker view - pass in q and timer\n  function startSession({ question, timer }) {\n    socket.emit(\"start\", { question, timer });\n  }\n\n  //function to stop the timer and end the session - pass this down to speaker view\n  function endSession() {\n    socket.emit(\"stopTimer\");\n  }\n  //pass down & call in ppt view - saves sessionData object\n  function submitData(val) {\n    socket.emit(\"submission\", { value: val });\n  }\n  return (\n    <main>\n      <NavBar />\n      <h1>Thumbometer</h1>\n      {speakerView && (\n        <SkView\n          data={data}\n          start={startSession}\n          end={endSession}\n          count={count}\n        />\n      )}\n      {!speakerView && (\n        <PtView data={data} submit={submitData} time={time} count={count} />\n      )}\n\n\n\n    </main>\n  );\n};\n\nexport default Thumbometer;\n"]},"metadata":{},"sourceType":"module"}