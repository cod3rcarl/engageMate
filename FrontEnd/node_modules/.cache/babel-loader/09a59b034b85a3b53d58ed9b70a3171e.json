{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport style from \"./index.module.css\";\nimport { Select } from \"@chakra-ui/react\";\nimport { Input } from \"@chakra-ui/react\";\nimport { Button, ButtonGroup, Icon } from \"@chakra-ui/react\";\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\nimport Thumb from \"../thumb\";\nimport Timer from \"../timer/index\"; // startSessionBtn.addEventListener(\"click\", (e) => {\n//   e.preventDefault();\n//   const question = document.querySelector(\"#questionInput\").value;\n//   const timer = document.querySelector(\"#timerInput\").value;\n//   socket.emit(\"start\", { question, timer });\n//   question.value = \"\";\n// });\n// endSessionBtn.addEventListener(\"click\", (e) => {\n//   e.preventDefault();\n//   socket.emit(\"stopTimer\");\n// });\n\nfunction SkView({\n  data,\n  startSession,\n  endSession,\n  count\n}) {\n  _s();\n\n  // question\n  //maybe have dropdown (with preset questions) and input (for create questions)\n  // Thumb\n  // overall mood\n  // timer (start button?)\n  // participants\n  const [question, setQuestion] = useState(\"\");\n  const [timer, setTimer] = useState(0);\n  const [value, setValue] = useState(0);\n\n  function handleSession(e) {\n    const result = e.target.value;\n    setQuestion(result);\n    console.log(question);\n  }\n\n  function handleTimer(e) {\n    setTimer(Number(e.target.value));\n    console.log(timer);\n  }\n\n  console.log({\n    data\n  });\n  console.log({\n    count\n  });\n  console.log({\n    question\n  });\n  console.log({\n    timer\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select question\",\n      onChange: handleSession,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"How are you feeling?\",\n        children: \"How are you feeling?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Did you understand that?\",\n        children: \"Did you understand that?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Are you comfortable with moving on?\",\n        children: \"Are you comfortable with moving on?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Timer Amount\",\n      onChange: handleTimer,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"10 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"15\",\n        children: \"15 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"20\",\n        children: \"20 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"25\",\n        children: \"25 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"30\",\n        children: \"30 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Thumb, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.valueInformation,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Value: \", value, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"25/30\", /*#__PURE__*/_jsxDEV(Icon, {\n          as: MdPeople\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(MdStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 27\n        }, this),\n        colorScheme: \"red\",\n        onClick: endSession,\n        children: \"Stop Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        rightIcon: /*#__PURE__*/_jsxDEV(MdUpdate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this),\n        colorScheme: \"green\",\n        onClick: () => startSession({\n          question,\n          timer\n        }),\n        children: \"Start Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkView, \"0UVEsn3jPWqxQr0kheqny3sIHvg=\");\n\n_c = SkView;\nexport default SkView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkView\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skView/index.js"],"names":["React","useState","style","Select","Input","Button","ButtonGroup","Icon","MdUpdate","MdStop","MdPeople","Thumb","Timer","SkView","data","startSession","endSession","count","question","setQuestion","timer","setTimer","value","setValue","handleSession","e","result","target","console","log","handleTimer","Number","container","valueInformation","buttons"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Select } from \"@chakra-ui/react\";\r\nimport { Input } from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup, Icon } from \"@chakra-ui/react\";\r\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\r\nimport Thumb from \"../thumb\";\r\nimport Timer from \"../timer/index\";\r\n\r\n// startSessionBtn.addEventListener(\"click\", (e) => {\r\n//   e.preventDefault();\r\n//   const question = document.querySelector(\"#questionInput\").value;\r\n//   const timer = document.querySelector(\"#timerInput\").value;\r\n\r\n//   socket.emit(\"start\", { question, timer });\r\n\r\n//   question.value = \"\";\r\n// });\r\n\r\n// endSessionBtn.addEventListener(\"click\", (e) => {\r\n//   e.preventDefault();\r\n//   socket.emit(\"stopTimer\");\r\n// });\r\n\r\nfunction SkView({ data, startSession, endSession, count }) {\r\n  // question\r\n  //maybe have dropdown (with preset questions) and input (for create questions)\r\n  // Thumb\r\n  // overall mood\r\n  // timer (start button?)\r\n  // participants\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [timer, setTimer] = useState(0);\r\n  const [value, setValue] = useState(0);\r\n  function handleSession(e) {\r\n    const result = e.target.value;\r\n    setQuestion(result);\r\n    console.log(question);\r\n  }\r\n\r\n  function handleTimer(e) {\r\n    setTimer(Number(e.target.value));\r\n    console.log(timer);\r\n  }\r\n  console.log({ data });\r\n  console.log({ count });\r\n  console.log({ question });\r\n  console.log({ timer });\r\n  return (\r\n    <div className={style.container}>\r\n      {/* <h1>The Question Here</h1> */}\r\n      <Select placeholder=\"Select question\" onChange={handleSession}>\r\n        <option value=\"How are you feeling?\">How are you feeling?</option>\r\n        <option value=\"Did you understand that?\">\r\n          Did you understand that?\r\n        </option>\r\n        <option value=\"Are you comfortable with moving on?\">\r\n          Are you comfortable with moving on?\r\n        </option>\r\n      </Select>\r\n      {/* <Input placeholder=\"Write your own question?\" /> */}\r\n      <Select placeholder=\"Timer Amount\" onChange={handleTimer}>\r\n        <option value=\"10\">10 Seconds</option>\r\n        <option value=\"15\">15 Seconds</option>\r\n        <option value=\"20\">20 Seconds</option>\r\n        <option value=\"25\">25 Seconds</option>\r\n        <option value=\"30\">30 Seconds</option>\r\n      </Select>\r\n\r\n      <Thumb value={value} />\r\n      <div className={style.valueInformation}>\r\n        <h3>Value: {value}%</h3>\r\n        <p>25/30{<Icon as={MdPeople} />}</p>\r\n      </div>\r\n      <Timer />\r\n      <div className={style.buttons}>\r\n        <Button leftIcon={<MdStop />} colorScheme=\"red\" onClick={endSession}>\r\n          Stop Timer\r\n        </Button>\r\n        <Button\r\n          rightIcon={<MdUpdate />}\r\n          colorScheme=\"green\"\r\n          onClick={() => startSession({ question, timer })}\r\n        >\r\n          Start Timer\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkView;\r\n"]},"metadata":{},"sourceType":"module"}