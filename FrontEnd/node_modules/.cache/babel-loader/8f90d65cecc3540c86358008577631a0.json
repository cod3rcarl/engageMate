{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptHand/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Hand from \"../hand\";\nimport Subheading from \"../../components/subheading\";\nimport { Input } from \"@chakra-ui/react\";\nimport style from \"./ptHand.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\n\nfunction PtHand() {\n  _s();\n\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [isRaised, setIsRaised] = useState(false);\n  const [topic, setTopic] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n  const loggedUser = result[2];\n  const name = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name;\n  const picture = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.picture;\n\n  function raiseHand(name, topic, picture) {\n    setIsRaised(!isRaised);\n    console.log({\n      isRaised\n    });\n    socket.emit(\"handRaised\", {\n      name: name,\n      topic: topic,\n      picture: picture,\n      handRaised: isRaised\n    });\n  }\n\n  function lowerHand(name) {\n    setIsRaised(!isRaised);\n    console.log({\n      isRaised\n    });\n    socket.emit(\"lowerhand\", {\n      name: name,\n      handRaised: isRaised\n    });\n  }\n\n  socket.on(\"handRaiseInfo\", ({\n    handRaiseData\n  }) => {\n    // setHandsRaised(handRaiseSubmissions);\n    setData(handRaiseData);\n  });\n\n  function handleChange(value) {\n    setTopic(value);\n    console.log(topic);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(Subheading, {\n      text: isRaised ? \"Click To Lower Hand\" : \"Click To Raise Hand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {\n      raiseHand: () => isRaised ? lowerHand() : raiseHand(name, topic, picture),\n      clicked: !isRaised\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PtHand, \"mhnhYhdYw4GfoDAc0Pb5/5abi4Y=\", false, function () {\n  return [useSocketContext, useRoleContext];\n});\n\n_c = PtHand;\nexport default PtHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtHand\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptHand/index.js"],"names":["React","useState","Hand","Subheading","Input","style","useSocketContext","useRoleContext","PtHand","myColor","setMyColor","isRaised","setIsRaised","topic","setTopic","data","setData","context","socket","result","loggedUser","name","given_name","picture","raiseHand","console","log","emit","handRaised","lowerHand","on","handRaiseData","handleChange","value","container","backgroundColor","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Hand from \"../hand\";\nimport Subheading from \"../../components/subheading\";\nimport { Input } from \"@chakra-ui/react\";\nimport style from \"./ptHand.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nfunction PtHand() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [isRaised, setIsRaised] = useState(false);\n  const [topic, setTopic] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n  const picture = loggedUser?.picture;\n  function raiseHand(name, topic, picture) {\n    setIsRaised(!isRaised);\n    console.log({ isRaised });\n    socket.emit(\"handRaised\", {\n      name: name,\n      topic: topic,\n      picture: picture,\n      handRaised: isRaised,\n    });\n  }\n\n  function lowerHand(name) {\n    setIsRaised(!isRaised);\n    console.log({ isRaised });\n    socket.emit(\"lowerhand\", {\n      name: name,\n      handRaised: isRaised,\n    });\n  }\n  socket.on(\"handRaiseInfo\", ({ handRaiseData }) => {\n    // setHandsRaised(handRaiseSubmissions);\n    setData(handRaiseData);\n  });\n\n  function handleChange(value) {\n    setTopic(value);\n    console.log(topic);\n  }\n\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      <Subheading\n        text={isRaised ? \"Click To Lower Hand\" : \"Click To Raise Hand\"}\n      />\n      <Hand\n        raiseHand={() =>\n          isRaised ? lowerHand() : raiseHand(name, topic, picture)\n        }\n        clicked={!isRaised}\n      />\n      <Input onChange={(e) => handleChange(e.target.value)} />\n    </div>\n  );\n}\n\nexport default PtHand;\n"]},"metadata":{},"sourceType":"module"}