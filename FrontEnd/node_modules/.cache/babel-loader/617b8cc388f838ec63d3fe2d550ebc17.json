{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\nimport useRoleContext from \"../../context/roleContext\";\n\nconst Authorised = () => {\n  _s();\n\n  const myRole = useRoleContext();\n  const result = myRole[3];\n  const setRole = myRole[1];\n  const role = myRole[0];\n  const loggedUser = myRole[2];\n  console.log(myRole); // const [role, setRole] = useState(\"\");\n\n  const {\n    isAuthenticated\n  } = useAuth0(); // const [loggedUser, setLoggedUser] = useState(user);\n  // let url =\n  //   process.env.REACT_APP_BACKEND_URL ||\n  //   `https://callback-cats.herokuapp.com/users/${loggedUser.email}`;\n\n  useEffect(() => {\n    result.data === loggedUser.email ? setRole(\"guest\") : setRole(result.data.role);\n  }, [result.data, setRole, loggedUser.email]); //   //loggedUser is the Auth0 information\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(FeaturedMenu, {\n        role: role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authorised, \"inUxLTJuma63J0eBa1zJEufmhXA=\", false, function () {\n  return [useRoleContext, useAuth0];\n});\n\n_c = Authorised;\nexport default Authorised;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorised\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js"],"names":["React","useState","useEffect","Route","useAuth0","FeaturedMenu","Login","useRoleContext","Authorised","myRole","result","setRole","role","loggedUser","console","log","isAuthenticated","data","email"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGF,cAAc,EAA7B;AACA,QAAMG,MAAM,GAAGD,MAAM,CAAC,CAAD,CAArB;AACA,QAAME,OAAO,GAAGF,MAAM,CAAC,CAAD,CAAtB;AACA,QAAMG,IAAI,GAAGH,MAAM,CAAC,CAAD,CAAnB;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAAC,CAAD,CAAzB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EANuB,CAOvB;;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAAsBZ,QAAQ,EAApC,CATuB,CAUvB;AAEA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACO,IAAP,KAAgBJ,UAAU,CAACK,KAA3B,GACIP,OAAO,CAAC,OAAD,CADX,GAEIA,OAAO,CAACD,MAAM,CAACO,IAAP,CAAYL,IAAb,CAFX;AAGD,GAJQ,EAIN,CAACF,MAAM,CAACO,IAAR,EAAcN,OAAd,EAAuBE,UAAU,CAACK,KAAlC,CAJM,CAAT,CAhBuB,CAqBvB;;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,gBACGF,eAAe,gBAAG,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADpD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BD;;GAAMJ,U;UACWD,c,EAQaH,Q;;;KATxBI,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\nimport useRoleContext from \"../../context/roleContext\";\n\nconst Authorised = () => {\n  const myRole = useRoleContext();\n  const result = myRole[3];\n  const setRole = myRole[1];\n  const role = myRole[0];\n  const loggedUser = myRole[2];\n  console.log(myRole);\n  // const [role, setRole] = useState(\"\");\n\n  const { isAuthenticated } = useAuth0();\n  // const [loggedUser, setLoggedUser] = useState(user);\n\n  // let url =\n  //   process.env.REACT_APP_BACKEND_URL ||\n  //   `https://callback-cats.herokuapp.com/users/${loggedUser.email}`;\n\n  useEffect(() => {\n    result.data === loggedUser.email\n      ? setRole(\"guest\")\n      : setRole(result.data.role);\n  }, [result.data, setRole, loggedUser.email]);\n  //   //loggedUser is the Auth0 information\n\n  return (\n    <div>\n      <Route path=\"/\">\n        {isAuthenticated ? <FeaturedMenu role={role} /> : <Login />}\n      </Route>\n    </div>\n  );\n};\n\nexport default Authorised;\n"]},"metadata":{},"sourceType":"module"}