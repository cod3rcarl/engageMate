{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nconst initialState = {\n  session: false,\n  results: false,\n  questionData: {\n    question: \"\",\n    options: [[], []]\n  },\n  choice: \"\",\n  view: \"waiting\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setSession\":\n      return { ...state,\n        questionData: action.data,\n        session: true,\n        view: action.view\n      };\n\n    case \"choice\":\n      return { ...state,\n        choice: action.choice\n      };\n\n    case \"setResults\":\n      return { ...state,\n        results: true,\n        questionData: action.data,\n        view: action.view\n      };\n\n    case \"stopSession\":\n      return { ...state,\n        session: false,\n        questionData: {},\n        view: action.view\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction PtPoll() {\n  _s();\n\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const data = useSocketContext();\n  const socket = data[0];\n  useEffect(() => {\n    socket.on(\"pollStart\", handlePollStart);\n    socket.on(\"sessionStop\", handleSessionStop);\n    return () => {\n      //cleanup\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function handlePollStart({\n    data\n  }) {\n    console.log({\n      data\n    });\n    dispatch({\n      type: \"setSession\",\n      data: data,\n      view: \"session\"\n    });\n    console.log({\n      state\n    }, \"set session\");\n    socket.off(\"pollStart\", handlePollStart);\n  }\n\n  function handleSessionStop() {\n    //end session, reset question display\n    console.log(\"stop session\");\n    dispatch({\n      type: \"stopSession\",\n      view: \"waiting\"\n    });\n    console.log({\n      state\n    }, \"session stop\");\n    socket.on(\"pollStart\", handlePollStart);\n  }\n\n  function submitVote() {\n    //submits the vote, if choice is set\n    //changes view again to view results (set another state)\n    if (state.choice !== \"\") {\n      socket.emit(\"vote\", {\n        data: state.choice\n      }); // setResults((results) => true);\n\n      dispatch({\n        type: \"setResults\",\n        view: \"results\"\n      });\n      dispatch({\n        type: \"choice\",\n        data: state.choice\n      });\n      console.log(\"vote submitted\", state.choice);\n      console.log({\n        state\n      });\n    } else {\n      console.log(\"choice not set\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor,\n      color: \"white\"\n    },\n    children: [state.view === \"waiting\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waiting for question.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 36\n    }, this), state.view === \"session\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.sessionBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: state.questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: style.optionsList,\n        children: state.questionData.options.map((o, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: style.option,\n            children: [o[1], /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch({\n                type: \"choice\",\n                choice: String(o[0])\n              }),\n              children: \"\\u2611\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: state.choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => submitVote(),\n        children: \"Submit \\u27A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), state.view === \"results\" && /*#__PURE__*/_jsxDEV(SkPollResults, {\n      data: state.questionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        _hover: {\n          background: \"white\",\n          color: \"#2C276B\"\n        },\n        variant: \"outline\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \" Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PtPoll, \"bAxkgSmXG655y7exEO7Chr3UHP4=\", false, function () {\n  return [useSocketContext];\n});\n\n_c = PtPoll;\nexport default PtPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtPoll\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js"],"names":["React","useState","useEffect","useReducer","style","Button","Link","useSocketContext","SkPollResults","ArrowBackIcon","initialState","session","results","questionData","question","options","choice","view","reducer","state","action","type","data","Error","PtPoll","myColor","setMyColor","dispatch","socket","on","handlePollStart","handleSessionStop","off","console","log","submitVote","emit","container","backgroundColor","color","sessionBox","optionsList","map","o","i","option","String","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nconst initialState = {\n  session: false,\n  results: false,\n  questionData: { question: \"\", options: [[], []] },\n  choice: \"\",\n  view: \"waiting\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setSession\":\n      return {\n        ...state,\n        questionData: action.data,\n        session: true,\n        view: action.view,\n      };\n    case \"choice\":\n      return { ...state, choice: action.choice };\n    case \"setResults\":\n      return {\n        ...state,\n        results: true,\n        questionData: action.data,\n        view: action.view,\n      };\n    case \"stopSession\":\n      return { ...state, session: false, questionData: {}, view: action.view };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction PtPoll() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const data = useSocketContext();\n  const socket = data[0];\n\n  useEffect(() => {\n    socket.on(\"pollStart\", handlePollStart);\n\n    socket.on(\"sessionStop\", handleSessionStop);\n\n    return () => {\n      //cleanup\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function handlePollStart({ data }) {\n    console.log({ data });\n    dispatch({ type: \"setSession\", data: data, view: \"session\" });\n    console.log({ state }, \"set session\");\n    socket.off(\"pollStart\", handlePollStart);\n  }\n\n  function handleSessionStop() {\n    //end session, reset question display\n    console.log(\"stop session\");\n\n    dispatch({ type: \"stopSession\", view: \"waiting\" });\n    console.log({ state }, \"session stop\");\n    socket.on(\"pollStart\", handlePollStart);\n  }\n\n  function submitVote() {\n    //submits the vote, if choice is set\n    //changes view again to view results (set another state)\n    if (state.choice !== \"\") {\n      socket.emit(\"vote\", { data: state.choice });\n\n      // setResults((results) => true);\n      dispatch({ type: \"setResults\", view: \"results\" });\n      dispatch({ type: \"choice\", data: state.choice });\n      console.log(\"vote submitted\", state.choice);\n      console.log({ state });\n    } else {\n      console.log(\"choice not set\");\n    }\n  }\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: myColor, color: \"white\" }}\n    >\n      {state.view === \"waiting\" && <h1>Waiting for question.</h1>}\n      {state.view === \"session\" && (\n        <div className={style.sessionBox}>\n          <h1>{state.questionData.question}</h1>\n          <ul className={style.optionsList}>\n            {state.questionData.options.map((o, i) => {\n              return (\n                <li className={style.option}>\n                  {o[1]}\n                  <button\n                    onClick={() =>\n                      dispatch({ type: \"choice\", choice: String(o[0]) })\n                    }\n                  >\n                    ☑\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n          <p>{state.choice}</p>\n          <Button onClick={() => submitVote()}>Submit ➡</Button>\n        </div>\n      )}\n\n      {state.view === \"results\" && <SkPollResults data={state.questionData} />}\n      <Link>\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default PtPoll;\n"]},"metadata":{},"sourceType":"module"}