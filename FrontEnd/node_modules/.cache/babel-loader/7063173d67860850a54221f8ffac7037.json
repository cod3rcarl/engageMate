{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Select, Button, Radio, SliderTrack, SliderFilledTrack, Progress } from \"@chakra-ui/react\";\nimport useSocketContext from \"../../context/socketContext\";\n\nfunction PtPoll() {\n  _s();\n\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [session, setSession] = useState(false);\n  const [results, setResults] = useState(false);\n  const [questionData, setQuestionData] = useState({});\n  const [resultsData, setResultsData] = useState({});\n  const [choice, setChoice] = useState(\"\");\n  const data = useSocketContext();\n  const socket = data[0]; //results update\n  //session stop\n  //expecting object with key of data - option number\n  // function sessionResults() {\n  //   //sets the results state to be the results data as sent in\n  //   if (resultsData) {\n  //     setResults(resultsData);\n  //     console.log(resultsData);\n  //   }\n  // }\n\n  useEffect(() => {\n    //socket listener - socket context\n    //if question and option data is set, set session activity to 'true'\n    //session 'true' conditionally renders\n    socket.on(\"pollStart\", ({\n      data\n    }) => {\n      //start a poll session and set question to render\n      console.log(data);\n      setQuestionData(data);\n      setSession(session => true);\n    });\n    socket.on(\"sessionStop\", () => {\n      //end session, reset question display\n      console.log(\"stop session\");\n      setSession(session => false);\n      setQuestionData({});\n    });\n    socket.on(\"resultsUpdate\", ({\n      data\n    }) => {\n      //submit results, set states and trigger conditionally rendered results display\n      console.log(\"results update received\");\n      console.log({\n        data\n      });\n      setResults(results => true);\n      setResultsData(resultsData => data);\n      console.log({\n        resultsData\n      });\n    });\n    return () => {\n      //cleanup\n      socket.off(\"pollstart\");\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function submitVote() {\n    //submits the vote, if choice is set\n    //changes view again to view results (set another state)\n    if (choice !== \"\") {\n      socket.emit(\"vote\", {\n        data: choice\n      });\n      setResults(results => true);\n      return console.log(\"vote submitted\", choice);\n    }\n\n    console.log(\"choice not set\");\n  }\n\n  function calculateResults(options, oNum) {\n    //calculate results value from total votes & votes per option\n    const totalVotes = options.reduce((acc, cur) => {\n      return acc + cur[3];\n    }, 0); //oNum out of totalVotes, return as %\n\n    console.log(oNum / totalVotes * 100);\n    return oNum / totalVotes * 100;\n  } //results state - if results state is true, sets session state to FALSE\n  //if results is true AND session is false- displays progress bars with results data\n  //percentage results of each optiong\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [session ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [questionData.options.map((o, i) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [o[1], \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setChoice(o[0]),\n              children: \"\\u2611\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: choice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waiting for question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), resultsData && results ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poll Results :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), resultsData ? resultsData.options.map((o, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: o[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            className: style.results,\n            colorScheme: \"green\",\n            height: \"3vh\",\n            value: () => calculateResults(resultsData.options, o[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Results pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: style.resultsNone,\n      children: \"Results pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => submitVote(),\n      children: \"Submit \\u27A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PtPoll, \"SUJkgQwuRklLhwQsOdjzxmwjx94=\", false, function () {\n  return [useSocketContext];\n});\n\n_c = PtPoll;\nexport default PtPoll; // <Progress\n// className={resultsData.option1 ? style.results : style.resultsNone}\n// colorScheme={\"green\"}\n// height=\"5vh\"\n// value={resultsData.options}\n// />\n\nvar _c;\n\n$RefreshReg$(_c, \"PtPoll\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptPoll/index.js"],"names":["React","useState","useEffect","style","Select","Button","Radio","SliderTrack","SliderFilledTrack","Progress","useSocketContext","PtPoll","myColor","setMyColor","session","setSession","results","setResults","questionData","setQuestionData","resultsData","setResultsData","choice","setChoice","data","socket","on","console","log","off","submitVote","emit","calculateResults","options","oNum","totalVotes","reduce","acc","cur","container","backgroundColor","map","o","i","resultsNone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport {\n  Select,\n  Button,\n  Radio,\n  SliderTrack,\n  SliderFilledTrack,\n  Progress,\n} from \"@chakra-ui/react\";\n\nimport useSocketContext from \"../../context/socketContext\";\n\nfunction PtPoll() {\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [session, setSession] = useState(false);\n  const [results, setResults] = useState(false);\n  const [questionData, setQuestionData] = useState({});\n  const [resultsData, setResultsData] = useState({});\n  const [choice, setChoice] = useState(\"\");\n\n  const data = useSocketContext();\n  const socket = data[0];\n\n  //results update\n  //session stop\n  //expecting object with key of data - option number\n\n  // function sessionResults() {\n  //   //sets the results state to be the results data as sent in\n  //   if (resultsData) {\n  //     setResults(resultsData);\n  //     console.log(resultsData);\n  //   }\n  // }\n\n  useEffect(() => {\n    //socket listener - socket context\n    //if question and option data is set, set session activity to 'true'\n    //session 'true' conditionally renders\n    socket.on(\"pollStart\", ({ data }) => {\n      //start a poll session and set question to render\n      console.log(data);\n      setQuestionData(data);\n      setSession((session) => true);\n    });\n    socket.on(\"sessionStop\", () => {\n      //end session, reset question display\n      console.log(\"stop session\");\n      setSession((session) => false);\n      setQuestionData({});\n    });\n\n    socket.on(\"resultsUpdate\", ({ data }) => {\n      //submit results, set states and trigger conditionally rendered results display\n      console.log(\"results update received\");\n      console.log({ data });\n      setResults((results) => true);\n      setResultsData((resultsData) => data);\n      console.log({ resultsData });\n    });\n\n    return () => {\n      //cleanup\n      socket.off(\"pollstart\");\n      socket.off(\"sessionStop\");\n    };\n  }, []);\n\n  function submitVote() {\n    //submits the vote, if choice is set\n    //changes view again to view results (set another state)\n    if (choice !== \"\") {\n      socket.emit(\"vote\", { data: choice });\n      setResults((results) => true);\n      return console.log(\"vote submitted\", choice);\n    }\n    console.log(\"choice not set\");\n  }\n\n  function calculateResults(options, oNum) {\n    //calculate results value from total votes & votes per option\n    const totalVotes = options.reduce((acc, cur) => {\n      return acc + cur[3];\n    }, 0);\n    //oNum out of totalVotes, return as %\n    console.log((oNum / totalVotes) * 100);\n    return (oNum / totalVotes) * 100;\n  }\n  //results state - if results state is true, sets session state to FALSE\n  //if results is true AND session is false- displays progress bars with results data\n  //percentage results of each optiong\n\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      {session ? (\n        <div>\n          {questionData.options.map((o, i) => {\n            return (\n              <ul>\n                <li>\n                  {o[1]} <button onClick={() => setChoice(o[0])}>☑</button>\n                </li>\n              </ul>\n            );\n          })}\n          <p>{choice}</p>\n        </div>\n      ) : (\n        <h1>Waiting for question</h1>\n      )}\n      {resultsData && results ? (\n        <div>\n          <h1>Poll Results :</h1>\n\n          {resultsData ? (\n            resultsData.options.map((o, i) => {\n              return (\n                <div>\n                  <p>{o[1]}</p>\n                  <Progress\n                    className={style.results}\n                    colorScheme={\"green\"}\n                    height=\"3vh\"\n                    value={() => calculateResults(resultsData.options, o[0])}\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <h1>Results pending</h1>\n          )}\n        </div>\n      ) : (\n        <h2 className={style.resultsNone}>Results pending</h2>\n      )}\n\n      <Button onClick={() => submitVote()}>Submit ➡</Button>\n    </div>\n  );\n}\n\nexport default PtPoll;\n\n// <Progress\n// className={resultsData.option1 ? style.results : style.resultsNone}\n// colorScheme={\"green\"}\n// height=\"5vh\"\n// value={resultsData.options}\n// />\n"]},"metadata":{},"sourceType":"module"}