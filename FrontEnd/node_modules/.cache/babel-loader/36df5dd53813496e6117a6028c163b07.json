{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\nimport useRoleContext from \"../../context/roleContext\";\nimport useSocketContext from \"../../context/socketContext\";\n\nfunction SkPollResults({\n  question,\n  stopPoll\n}) {\n  _s();\n\n  const result = useRoleContext();\n  const role = result[0];\n  const loggedUser = result[2];\n  const socketdata = useSocketContext();\n  const socket = socketdata[0];\n  const [data, setData] = useState(question);\n  console.log({\n    role\n  });\n  console.log({\n    data\n  });\n\n  function calculateProgressBar(option) {\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\n    const resultvalue = option[2] / totalVotes * 100;\n    console.log(resultvalue);\n    return resultvalue;\n  }\n\n  useEffect(() => {\n    socket.on(\"resultsUpdate\", ({\n      data\n    }) => {\n      console.log({\n        data\n      }, \"skPollResults sockets\");\n      setData(data); //question, uuid, correct answer, options\n\n      console.log({\n        data\n      }, \"resultsUpdate\");\n    });\n    return () => {\n      if (role === \"coach\") {\n        socket.emit(\"sessionStop\");\n        console.log(\"sessionStopped\");\n      }\n\n      socket.off(\"resultsUpdate\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.resultsDiv,\n    children: /*#__PURE__*/_jsxDEV(LightMode, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live Poll Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: style.totalUsers,\n        children: [data ? data.options.reduce((acc, curr) => acc + curr[2], 0) : \"\", \" \\uD83D\\uDC65\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" \", data ? data.question : \"question\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        children: data === null || data === void 0 ? void 0 : data.options.map((option, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Option \", option[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), \": \", option[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.progressDiv,\n              children: [/*#__PURE__*/_jsxDEV(Progress, {\n                colorScheme: Number(data.correctAnswer) === option[0] ? \"green\" : \"red\",\n                style: {\n                  borderRadius: \"30px\",\n                  width: \"90%\"\n                },\n                value: calculateProgressBar(option) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: option[2] || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), role !== \"bootcamper\" && /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        onClick: stopPoll,\n        children: \"Stop Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkPollResults, \"VWhWXUw5LEi5zFq+D7PlvlB5lLA=\", false, function () {\n  return [useRoleContext, useSocketContext];\n});\n\n_c = SkPollResults;\nexport default SkPollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkPollResults\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js"],"names":["React","useEffect","useState","style","Button","Progress","Stack","LightMode","useRoleContext","useSocketContext","SkPollResults","question","stopPoll","result","role","loggedUser","socketdata","socket","data","setData","console","log","calculateProgressBar","option","totalVotes","options","reduce","acc","curr","resultvalue","on","emit","off","resultsDiv","totalUsers","map","i","progressDiv","Number","correctAnswer","borderRadius","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\r\nimport useRoleContext from \"../../context/roleContext\";\r\nimport useSocketContext from \"../../context/socketContext\";\r\n\r\nfunction SkPollResults({ question, stopPoll }) {\r\n  const result = useRoleContext();\r\n  const role = result[0];\r\n  const loggedUser = result[2];\r\n  const socketdata = useSocketContext();\r\n  const socket = socketdata[0];\r\n  const [data, setData] = useState(question);\r\n  console.log({ role });\r\n  console.log({ data });\r\n\r\n  function calculateProgressBar(option) {\r\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\r\n    const resultvalue = (option[2] / totalVotes) * 100;\r\n    console.log(resultvalue);\r\n    return resultvalue;\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"resultsUpdate\", ({ data }) => {\r\n      console.log({ data }, \"skPollResults sockets\");\r\n      setData(data);\r\n      //question, uuid, correct answer, options\r\n      console.log({ data }, \"resultsUpdate\");\r\n    });\r\n\r\n    return () => {\r\n      if (role === \"coach\") {\r\n        socket.emit(\"sessionStop\");\r\n        console.log(\"sessionStopped\");\r\n      }\r\n\r\n      socket.off(\"resultsUpdate\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.resultsDiv}>\r\n      <LightMode>\r\n        <h1>Live Poll Results</h1>\r\n        {/* Display set question, options & progress bar for each*/}\r\n        <p className={style.totalUsers}>\r\n          {data ? data.options.reduce((acc, curr) => acc + curr[2], 0) : \"\"} 👥\r\n        </p>\r\n        <h2>\r\n          <strong>Question:</strong> {data ? data.question : \"question\"}\r\n        </h2>\r\n        <Stack spacing={5}>\r\n          {/* render options and progress bars here\r\n          from data */}\r\n          {data?.options.map((option, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <p>\r\n                  <strong>Option {option[0]}</strong>: {option[1]}\r\n                </p>\r\n                <div className={style.progressDiv}>\r\n                  <Progress\r\n                    colorScheme={\r\n                      Number(data.correctAnswer) === option[0] ? \"green\" : \"red\"\r\n                    }\r\n                    style={{\r\n                      borderRadius: \"30px\",\r\n                      width: \"90%\",\r\n                    }}\r\n                    value={calculateProgressBar(option) || 0}\r\n                  />\r\n                  <span>{option[2] || 0}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </Stack>\r\n\r\n        {role !== \"bootcamper\" && (\r\n          <Button colorScheme=\"red\" onClick={stopPoll}>\r\n            Stop Session\r\n          </Button>\r\n        )}\r\n      </LightMode>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkPollResults;\r\n"]},"metadata":{},"sourceType":"module"}