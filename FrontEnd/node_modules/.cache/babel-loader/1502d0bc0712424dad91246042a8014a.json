{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\n\nfunction SkPollResults({\n  data,\n  stopPoll,\n  socket\n}) {\n  _s();\n\n  function calculateProgressBar(option) {\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\n    return option[2] / totalVotes * 100;\n  }\n\n  useEffect(() => {\n    return () => {\n      socket.emit(\"sessionStop\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.resultsDiv,\n    children: /*#__PURE__*/_jsxDEV(LightMode, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live Poll Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" \", data.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 5,\n        children: data === null || data === void 0 ? void 0 : data.options.map((option, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Option \", option[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), \": \", option[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              colorScheme: \"pink\",\n              value: calculateProgressBar(option) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        onClick: stopPoll,\n        children: \"Stop Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkPollResults, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SkPollResults;\nexport default SkPollResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkPollResults\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPollResults/index.js"],"names":["React","useEffect","style","Button","Progress","Stack","LightMode","SkPollResults","data","stopPoll","socket","calculateProgressBar","option","totalVotes","options","reduce","acc","curr","emit","resultsDiv","question","map","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,SAAlC,QAAmD,kBAAnD;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAvB,EAAmD;AAAA;;AACjD,WAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACpC,UAAMC,UAAU,GAAGL,IAAI,CAACM,OAAL,CAAaC,MAAb,CAAoB,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAAC,CAAD,CAA7C,EAAkD,CAAlD,CAAnB;AACA,WAAQL,MAAM,CAAC,CAAD,CAAN,GAAYC,UAAb,GAA2B,GAAlC;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXS,MAAAA,MAAM,CAACQ,IAAP,CAAY,aAAZ;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB,UAAtB;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OAC8BX,IAAI,CAACY,QADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,kBAGGZ,IAHH,aAGGA,IAHH,uBAGGA,IAAI,CAAEM,OAAN,CAAcO,GAAd,CAAkB,CAACT,MAAD,EAASU,CAAT,KAAe;AAChC,8BACE;AAAA,oCACE;AAAA,sCACE;AAAA,sCAAgBV,MAAM,CAAC,CAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,QACwCA,MAAM,CAAC,CAAD,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,QAAD;AACE,cAAA,WAAW,EAAC,MADd;AAEE,cAAA,KAAK,EAAED,oBAAoB,CAACC,MAAD,CAApB,IAAgC;AAFzC;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAAUU,CAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZA;AAHH;AAAA;AAAA;AAAA;AAAA,cANF,eAwBE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,KAApB;AAA0B,QAAA,OAAO,EAAEb,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA5CQF,a;;KAAAA,a;AA8CT,eAAeA,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Button, Progress, Stack, LightMode } from \"@chakra-ui/react\";\r\n\r\nfunction SkPollResults({ data, stopPoll, socket }) {\r\n  function calculateProgressBar(option) {\r\n    const totalVotes = data.options.reduce((acc, curr) => acc + curr[2], 0);\r\n    return (option[2] / totalVotes) * 100;\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.emit(\"sessionStop\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.resultsDiv}>\r\n      <LightMode>\r\n        <h1>Live Poll Results</h1>\r\n        {/* Display set question, options & progress bar for each*/}\r\n        <h2>\r\n          <strong>Question:</strong> {data.question}\r\n        </h2>\r\n        <Stack spacing={5}>\r\n          {/* render options and progress bars here\r\n          from data */}\r\n          {data?.options.map((option, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <p>\r\n                  <strong>Option {option[0]}</strong>: {option[1]}\r\n                </p>\r\n                <Progress\r\n                  colorScheme=\"pink\"\r\n                  value={calculateProgressBar(option) || 0}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </Stack>\r\n\r\n        <Button colorScheme=\"red\" onClick={stopPoll}>\r\n          Stop Session\r\n        </Button>\r\n      </LightMode>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkPollResults;\r\n"]},"metadata":{},"sourceType":"module"}