{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Center } from \"@chakra-ui/react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon, EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport StartSession from \"../massAlert/startSession\";\n\nfunction SkPoll() {\n  _s();\n\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [optionData, setOptionData] = useState([]);\n  const [resultsObj, setResultsObj] = useState({});\n  const [pollStarted, setPollStarted] = useState(false);\n  const context = useSocketContext();\n  const socket = context[0];\n  useEffect(() => {\n    socket.on(\"resultsUpdate\", obj => {\n      console.log(\"Results update received\");\n      updateResultsObj(obj);\n    });\n    socket.on(\"pollStart\", ({\n      data\n    }) => {\n      console.log(\"data from server at poll start\", data);\n    });\n    return () => {\n      socket.off(\"resultsUpdate\");\n      socket.off(\"pollStart\");\n    };\n  }, []);\n\n  function updateResultsObj(obj) {\n    console.log(\"Results update received\", obj);\n    setResultsObj(obj.data);\n  }\n\n  const arr = [];\n\n  for (let i = 0; i < value; i++) {\n    // console.log(i);\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: `set option ${i + 1}`,\n        width: \"300px\",\n        id: i + 1,\n        onChange: handleOptions,\n        maxLength: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: `choice${i + 1}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `choice${i + 1}`,\n          name: \"choice\",\n          type: \"radio\",\n          name: \"correctButton\",\n          value: `${i + 1}`,\n          className: style.radio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this));\n  }\n\n  function handleOptions(e) {\n    setOptionData({ ...optionData,\n      [e.target.id]: e.target.value\n    });\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n    console.log(arr);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const correct = e.target.elements.correctButton.value;\n    const obj = {\n      question,\n      options: Object.keys(optionData).map(key => [Number(key), optionData[key], 0]),\n      correctAnswer: correct,\n      uuid: uuidv4()\n    };\n    startPoll(obj);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n      console.log({\n        question\n      });\n    }\n\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n\n  function startPoll(data) {\n    socket.emit(\"pollStart\", {\n      data\n    });\n    setPollStarted(true);\n    setResultsObj(data);\n    console.log(\"Poll started - Data sent to server\", {\n      data\n    });\n  }\n\n  function stopPoll() {\n    setPollStarted(false);\n    setQuestion(question => \"\");\n    setOptionData(optionData => {});\n    setResultsObj(resultsObj => {});\n    setCustom(custom => false);\n    socket.emit(\"sessionStop\");\n    console.log(\"Speaker has ended poll\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: `${myColor}`,\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(StartSession, {\n      className: style.button,\n      message: \"Live Poll session starting. Head to the Live Quiz page to join!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), !pollStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a question\",\n          onChange: handleSession,\n          className: style.select,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Which one is the odd one out?\",\n            children: \"Which one is the odd one out?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"Set a custom question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          focusBorderColor: \"lime\",\n          className: style.borderColor,\n          style: custom ? {\n            display: \"block\",\n            textAlign: \"center\",\n            borderColor: \"grey\"\n          } : {\n            display: \"none\"\n          },\n          placeholder: \"set custom question...\",\n          type: \"text\",\n          onChange: e => setQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          className: \"optionsInput\",\n          children: arr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: [value < 4 ? /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: \"white\"\n              },\n              colorScheme: myColor,\n              onClick: () => setValue(value + 1),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: \"white\"\n              },\n              colorScheme: \"\",\n              onClick: remove,\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: \"white\"\n              },\n              colorScheme: \"\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), pollStarted && /*#__PURE__*/_jsxDEV(SkPollResults, {\n      question: resultsObj,\n      stopPoll: stopPoll,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        _hover: {\n          background: \"white\",\n          color: `${myColor}`\n        },\n        variant: \"outline\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), \" Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkPoll, \"AXPk+jVkOKLOms5xqEXFt5+E/vg=\", false, function () {\n  return [useSocketContext];\n});\n\n_c = SkPoll;\nexport default SkPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkPoll\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js"],"names":["React","useState","useEffect","style","Input","Select","Stack","HStack","Button","Center","v4","uuidv4","useSocketContext","SkPollResults","ArrowBackIcon","EditIcon","DeleteIcon","Link","StartSession","SkPoll","question","setQuestion","custom","setCustom","myColor","value","setValue","optionData","setOptionData","resultsObj","setResultsObj","pollStarted","setPollStarted","context","socket","on","obj","console","log","updateResultsObj","data","off","arr","i","push","handleOptions","radio","e","target","id","remove","pop","handleSubmit","preventDefault","correct","elements","correctButton","options","Object","keys","map","key","Number","correctAnswer","uuid","startPoll","handleSession","emit","stopPoll","container","backgroundColor","color","button","select","borderColor","display","textAlign","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Center } from \"@chakra-ui/react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useSocketContext from \"../../context/socketContext\";\nimport SkPollResults from \"../skPollResults\";\nimport { ArrowBackIcon, EditIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport StartSession from \"../massAlert/startSession\";\n\nfunction SkPoll() {\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [optionData, setOptionData] = useState([]);\n  const [resultsObj, setResultsObj] = useState({});\n  const [pollStarted, setPollStarted] = useState(false);\n\n  const context = useSocketContext();\n  const socket = context[0];\n\n  useEffect(() => {\n    socket.on(\"resultsUpdate\", (obj) => {\n      console.log(\"Results update received\");\n      updateResultsObj(obj);\n    });\n\n    socket.on(\"pollStart\", ({ data }) => {\n      console.log(\"data from server at poll start\", data);\n    });\n\n    return () => {\n      socket.off(\"resultsUpdate\");\n      socket.off(\"pollStart\");\n    };\n  }, []);\n\n  function updateResultsObj(obj) {\n    console.log(\"Results update received\", obj);\n    setResultsObj(obj.data);\n  }\n\n  const arr = [];\n  for (let i = 0; i < value; i++) {\n    // console.log(i);\n    arr.push(\n      <div>\n        <Input\n          type=\"text\"\n          placeholder={`set option ${i + 1}`}\n          width=\"300px\"\n          id={i + 1}\n          onChange={handleOptions}\n          maxLength=\"30\"\n        ></Input>\n        <label for={`choice${i + 1}`}>\n          <input\n            id={`choice${i + 1}`}\n            name=\"choice\"\n            type=\"radio\"\n            name=\"correctButton\"\n            value={`${i + 1}`}\n            className={style.radio}\n          />\n          <span></span>\n        </label>\n      </div>\n    );\n  }\n\n  function handleOptions(e) {\n    setOptionData({\n      ...optionData,\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n    console.log(arr);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const correct = e.target.elements.correctButton.value;\n    const obj = {\n      question,\n      options: Object.keys(optionData).map((key) => [\n        Number(key),\n        optionData[key],\n        0,\n      ]),\n      correctAnswer: correct,\n      uuid: uuidv4(),\n    };\n\n    startPoll(obj);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n      console.log({ question });\n    }\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n\n  function startPoll(data) {\n    socket.emit(\"pollStart\", { data });\n    setPollStarted(true);\n    setResultsObj(data);\n    console.log(\"Poll started - Data sent to server\", { data });\n  }\n\n  function stopPoll() {\n    setPollStarted(false);\n    setQuestion((question) => \"\");\n    setOptionData((optionData) => {});\n    setResultsObj((resultsObj) => {});\n    setCustom((custom) => false);\n    socket.emit(\"sessionStop\");\n    console.log(\"Speaker has ended poll\");\n  }\n\n  return (\n    <div\n      className={style.container}\n      style={{ backgroundColor: `${myColor}`, color: \"white\" }}\n    >\n      <StartSession\n        className={style.button}\n        message=\"Live Poll session starting. Head to the Live Quiz page to join!\"\n      />\n      {!pollStarted && (\n        <div>\n          <form onSubmit={handleSubmit}>\n            <Select\n              placeholder=\"Select a question\"\n              onChange={handleSession}\n              className={style.select}\n            >\n              <option value=\"Which one is the odd one out?\">\n                Which one is the odd one out?\n              </option>\n              <option value=\"custom\">Set a custom question</option>\n            </Select>\n            <Input\n              focusBorderColor=\"lime\"\n              className={style.borderColor}\n              style={\n                custom\n                  ? {\n                      display: \"block\",\n                      textAlign: \"center\",\n                      borderColor: \"grey\",\n                    }\n                  : { display: \"none\" }\n              }\n              placeholder=\"set custom question...\"\n              type=\"text\"\n              onChange={(e) => setQuestion(e.target.value)}\n            />\n            <Stack className=\"optionsInput\">{arr}</Stack>\n            <Center>\n              <HStack>\n                {value < 4 ? (\n                  <Button\n                    style={{ color: \"white\" }}\n                    colorScheme={myColor}\n                    onClick={() => setValue(value + 1)}\n                  >\n                    <EditIcon />\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n                <Button\n                  style={{ color: \"white\" }}\n                  colorScheme=\"\"\n                  onClick={remove}\n                >\n                  <DeleteIcon />\n                </Button>\n                <Button style={{ color: \"white\" }} colorScheme=\"\" type=\"submit\">\n                  Submit\n                </Button>\n              </HStack>\n            </Center>\n          </form>\n        </div>\n      )}\n      {pollStarted && (\n        <SkPollResults\n          question={resultsObj}\n          stopPoll={stopPoll}\n          socket={socket}\n        />\n      )}{\" \"}\n      <br />\n      <Link to=\"/\">\n        <Button\n          _hover={{\n            background: \"white\",\n            color: `${myColor}`,\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\nexport default SkPoll;\n"]},"metadata":{},"sourceType":"module"}