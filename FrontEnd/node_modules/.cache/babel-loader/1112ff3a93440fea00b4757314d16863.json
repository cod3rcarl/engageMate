{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport Thumb from \"../thumb\";\nimport { Slider, SliderTrack, SliderFilledTrack, SliderThumb, useColorModeValue } from \"@chakra-ui/react\";\nimport { Icon } from \"@chakra-ui/react\";\nimport { MdPeople } from \"react-icons/md\";\nimport Timer from \"../timer/index\";\n\nfunction PtView({\n  data,\n  submit,\n  time,\n  count\n}) {\n  _s();\n\n  const [myColor, setMyColor] = useState(\"#2C276B\"); // display the question\n  // rotatable thumb\n  // slider\n  // slider value\n  // timer\n\n  const [value, setValue] = useState(0);\n  const bg = useColorModeValue(\"#110042\", \"white\");\n  const color = useColorModeValue(\"white\", \"#110042\");\n  useEffect(() => {\n    if (count > 0) {\n      submit(value);\n    }\n  }, [value]); // slider.addEventListener(\"change\", () => {\n  //   sliderVal.innerText = `Value: ${slider.value}`;\n  //   socket.emit(\"submission\", { value: slider.value });\n  // });\n\n  useEffect(() => {\n    if (data.outcome === 0) {\n      setMyColor(\"#2C276B\");\n    } else if (data.outcome <= 33) {\n      setMyColor(\"red\");\n    } else if (data.outcome > 33 && data.outcome <= 66) {\n      setMyColor(\"orange\");\n    } else if (data.outcome > 66 && data.outcome <= 100) {\n      setMyColor(\"green\");\n    }\n  }, [data.outcome]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Thumb, {\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      \"aria-label\": \"slider-ex-1\",\n      defaultValue: 30,\n      onChangeEnd: val => setValue(val),\n      isDisabled: count > 0 ? false : true,\n      children: [/*#__PURE__*/_jsxDEV(SliderTrack, {\n        children: /*#__PURE__*/_jsxDEV(SliderFilledTrack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SliderThumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Value: \", value, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [data.responses, \"/\", data.participants, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n        as: MdPeople\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      count: count,\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PtView, \"3M5g0CyYpOwyUB26aV6slf3IfYI=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n\n_c = PtView;\nexport default PtView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtView\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/ptView/index.js"],"names":["React","useState","useEffect","style","Thumb","Slider","SliderTrack","SliderFilledTrack","SliderThumb","useColorModeValue","Icon","MdPeople","Timer","PtView","data","submit","time","count","myColor","setMyColor","value","setValue","bg","color","outcome","container","backgroundColor","question","val","responses","participants"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,WAJF,EAKEC,iBALF,QAMO,kBANP;AAOA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA;AAAtB,CAAhB,EAA+C;AAAA;;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,SAAD,CAAtC,CAD6C,CAE7C;AACA;AACA;AACA;AACA;;AAEA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMqB,EAAE,GAAGb,iBAAiB,CAAC,SAAD,EAAY,OAAZ,CAA5B;AACA,QAAMc,KAAK,GAAGd,iBAAiB,CAAC,OAAD,EAAU,SAAV,CAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,KAAK,GAAG,CAAZ,EAAe;AACbF,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD;AACF,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT,CAZ6C,CAkB7C;AACA;AACA;AACA;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAI,CAACU,OAAL,KAAiB,CAArB,EAAwB;AACtBL,MAAAA,UAAU,CAAC,SAAD,CAAV;AACD,KAFD,MAEO,IAAIL,IAAI,CAACU,OAAL,IAAgB,EAApB,EAAwB;AAC7BL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFM,MAEA,IAAIL,IAAI,CAACU,OAAL,GAAe,EAAf,IAAqBV,IAAI,CAACU,OAAL,IAAgB,EAAzC,EAA6C;AAClDL,MAAAA,UAAU,CAAC,QAAD,CAAV;AACD,KAFM,MAEA,IAAIL,IAAI,CAACU,OAAL,GAAe,EAAf,IAAqBV,IAAI,CAACU,OAAL,IAAgB,GAAzC,EAA8C;AACnDL,MAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,GAVQ,EAUN,CAACL,IAAI,CAACU,OAAN,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAErB,KAAK,CAACsB,SAAtB;AAAiC,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAER;AAAnB,KAAxC;AAAA,4BACE;AAAA,gBAAKJ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,oBAAW,aADb;AAEE,MAAA,YAAY,EAAE,EAFhB;AAGE,MAAA,WAAW,EAAGQ,GAAD,IAASP,QAAQ,CAACO,GAAD,CAHhC;AAIE,MAAA,UAAU,EAAEX,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB,IAJlC;AAAA,8BAME,QAAC,WAAD;AAAA,+BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAcE;AAAA,4BAAYG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA,iBACGN,IAAI,CAACe,SADR,OACoBf,IAAI,CAACgB,YADzB,oBACwC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEnB;AAAV;AAAA;AAAA;AAAA;AAAA,cADxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAA,gBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAqB,MAAA,IAAI,EAAED;AAA3B;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzDQH,M;UASIJ,iB,EACGA,iB;;;KAVPI,M;AA2DT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport Thumb from \"../thumb\";\r\nimport {\r\n  Slider,\r\n  SliderTrack,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\nimport { Icon } from \"@chakra-ui/react\";\r\nimport { MdPeople } from \"react-icons/md\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction PtView({ data, submit, time, count }) {\r\n  const [myColor, setMyColor] = useState(\"#2C276B\");\r\n  // display the question\r\n  // rotatable thumb\r\n  // slider\r\n  // slider value\r\n  // timer\r\n\r\n  const [value, setValue] = useState(0);\r\n  const bg = useColorModeValue(\"#110042\", \"white\");\r\n  const color = useColorModeValue(\"white\", \"#110042\");\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      submit(value);\r\n    }\r\n  }, [value]);\r\n\r\n  // slider.addEventListener(\"change\", () => {\r\n  //   sliderVal.innerText = `Value: ${slider.value}`;\r\n  //   socket.emit(\"submission\", { value: slider.value });\r\n  // });\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#2C276B\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"orange\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div className={style.container} style={{ backgroundColor: myColor }}>\r\n      <h1>{data.question}</h1>\r\n      <Thumb value={value} />\r\n      <Slider\r\n        aria-label=\"slider-ex-1\"\r\n        defaultValue={30}\r\n        onChangeEnd={(val) => setValue(val)}\r\n        isDisabled={count > 0 ? false : true}\r\n      >\r\n        <SliderTrack>\r\n          <SliderFilledTrack />\r\n        </SliderTrack>\r\n        <SliderThumb />\r\n      </Slider>\r\n      <h3>Value: {value}%</h3>\r\n      <p>\r\n        {data.responses}/{data.participants} {<Icon as={MdPeople} />}\r\n      </p>\r\n      <p>{count}</p>\r\n      <Timer count={count} time={time} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PtView;\r\n"]},"metadata":{},"sourceType":"module"}