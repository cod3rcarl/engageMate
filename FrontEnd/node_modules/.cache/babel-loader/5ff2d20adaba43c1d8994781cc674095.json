{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\nimport useRoleContext from \"../../context/roleContext\";\n\nconst Authorised = () => {\n  _s();\n\n  const data = useRoleContext();\n  const role = data[2];\n  const setRole = data[3];\n  const loggedUser = data[1]; // console.log(myRole[2]);\n  // const [role, setRole] = useState(\"\");\n\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  console.log(user); // const [loggedUser, setLoggedUser] = useState(user);\n\n  function unauthorised() {\n    // Popup with message to contact administrator redirect to login\n    // create a landing page for unauthorised users\n\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: \"/unauthorised\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  }\n\n  let url = process.env.REACT_APP_BACKEND_URL || `https://callback-cats.herokuapp.com/users/${user.email}`;\n  useEffect(() => {\n    async function getUsers() {\n      const data = await fetch(url);\n      const result = await data.json();\n      console.log(result.success);\n      result.success === false ? unauthorised() : setRole(result.data.role);\n      console.log(role);\n    }\n\n    getUsers(); //loggedUser is the Auth0 information\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(FeaturedMenu, {\n        role: role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authorised, \"GeIGXDExmfnXVTKSmVSX/P0c7gA=\", false, function () {\n  return [useRoleContext, useAuth0];\n});\n\n_c = Authorised;\nexport default Authorised;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorised\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js"],"names":["React","useState","useEffect","Route","Redirect","useAuth0","FeaturedMenu","Login","useRoleContext","Authorised","data","role","setRole","loggedUser","isAuthenticated","user","console","log","unauthorised","url","process","env","REACT_APP_BACKEND_URL","email","getUsers","fetch","result","json","success"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGF,cAAc,EAA3B;AACA,QAAMG,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAjB;AACA,QAAME,OAAO,GAAGF,IAAI,CAAC,CAAD,CAApB;AACA,QAAMG,UAAU,GAAGH,IAAI,CAAC,CAAD,CAAvB,CAJuB,CAMvB;AACA;;AAEA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BV,QAAQ,EAA1C;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAVuB,CAWvB;;AACA,WAASG,YAAT,GAAwB;AACtB;AACA;;AACA;AAAA,YAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AACD;;AACD,MAAIC,GAAG,GACLC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IACC,6CAA4CP,IAAI,CAACQ,KAAM,EAF1D;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesB,QAAf,GAA0B;AACxB,YAAMd,IAAI,GAAG,MAAMe,KAAK,CAACN,GAAD,CAAxB;AACA,YAAMO,MAAM,GAAG,MAAMhB,IAAI,CAACiB,IAAL,EAArB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAM,CAACE,OAAnB;AACAF,MAAAA,MAAM,CAACE,OAAP,KAAmB,KAAnB,GAA2BV,YAAY,EAAvC,GAA4CN,OAAO,CAACc,MAAM,CAAChB,IAAP,CAAYC,IAAb,CAAnD;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;AAEDa,IAAAA,QAAQ,GATM,CAWd;AACD,GAZQ,EAYN,EAZM,CAAT;AAaA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,gBACGV,eAAe,gBAAG,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADpD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCD;;GAAMF,U;UACSD,c,EAQqBH,Q;;;KAT9BI,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\n\nimport useRoleContext from \"../../context/roleContext\";\n\nconst Authorised = () => {\n  const data = useRoleContext();\n  const role = data[2];\n  const setRole = data[3];\n  const loggedUser = data[1];\n\n  // console.log(myRole[2]);\n  // const [role, setRole] = useState(\"\");\n\n  const { isAuthenticated, user } = useAuth0();\n  console.log(user);\n  // const [loggedUser, setLoggedUser] = useState(user);\n  function unauthorised() {\n    // Popup with message to contact administrator redirect to login\n    // create a landing page for unauthorised users\n    <Redirect to=\"/unauthorised\" />;\n  }\n  let url =\n    process.env.REACT_APP_BACKEND_URL ||\n    `https://callback-cats.herokuapp.com/users/${user.email}`;\n\n  useEffect(() => {\n    async function getUsers() {\n      const data = await fetch(url);\n      const result = await data.json();\n      console.log(result.success);\n      result.success === false ? unauthorised() : setRole(result.data.role);\n      console.log(role);\n    }\n\n    getUsers();\n\n    //loggedUser is the Auth0 information\n  }, []);\n  return (\n    <div>\n      <Route path=\"/\">\n        {isAuthenticated ? <FeaturedMenu role={role} /> : <Login />}\n      </Route>\n    </div>\n  );\n};\n\nexport default Authorised;\n"]},"metadata":{},"sourceType":"module"}