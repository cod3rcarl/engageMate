{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/quiz/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport PtPoll from \"../../components/ptPoll\";\nimport CustomButton from \"../../components/button\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport useRoleContext from \"../../context/roleContext\";\nimport SkPoll from \"../../components/skPoll\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\nimport styles from \"./index.module.css\";\nimport { forwardRef } from \"@chakra-ui/react\";\nimport { motion, isValidMotionProp } from \"framer-motion\";\nconst MotionBox = motion.custom(_c2 = forwardRef(_c = (props, ref) => {\n  const chakraProps = Object.fromEntries( // do not pass framer props to DOM element\n  Object.entries(props).filter(([key]) => !isValidMotionProp(key)));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: ref,\n    ...chakraProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n}));\n_c3 = MotionBox;\n\nconst Quiz = () => {\n  _s();\n\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"white\", \"white\");\n  const result = useRoleContext();\n  const role = result[0];\n  console.log(role);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.container,\n      bg: bg,\n      color: color,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        h: \"100vh\",\n        d: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            link: \"/\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 42\n            }, this),\n            text: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Center, {\n            children: [role === \"coach\" && /*#__PURE__*/_jsxDEV(SkPoll, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 36\n            }, this), role === \"bootcamper\" && /*#__PURE__*/_jsxDEV(PtPoll, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"2/cWtDUYzy8zQwyECto+cT12Sl0=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useRoleContext];\n});\n\n_c4 = Quiz;\nexport default Quiz;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MotionBox$motion.custom$forwardRef\");\n$RefreshReg$(_c2, \"MotionBox$motion.custom\");\n$RefreshReg$(_c3, \"MotionBox\");\n$RefreshReg$(_c4, \"Quiz\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/quiz/index.js"],"names":["React","NavBar","PtPoll","CustomButton","ArrowBackIcon","useRoleContext","SkPoll","Flex","Box","Center","useColorModeValue","styles","forwardRef","motion","isValidMotionProp","MotionBox","custom","props","ref","chakraProps","Object","fromEntries","entries","filter","key","Quiz","bg","color","result","role","console","log","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,iBAA5B,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,iBAAjB,QAA0C,eAA1C;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,MAAP,OAChBJ,UAAU,MAAC,CAACK,KAAD,EAAQC,GAAR,KAAgB;AACzB,QAAMC,WAAW,GAAGC,MAAM,CAACC,WAAP,EAClB;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAeL,KAAf,EAAsBM,MAAtB,CAA6B,CAAC,CAACC,GAAD,CAAD,KAAW,CAACV,iBAAiB,CAACU,GAAD,CAA1D,CAFkB,CAApB;AAIA,sBAAO,QAAC,GAAD;AAAK,IAAA,GAAG,EAAEN,GAAV;AAAA,OAAmBC;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CANS,CADM,CAAlB;MAAMJ,S;;AASN,MAAMU,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,EAAE,GAAGhB,iBAAiB,CAAC,OAAD,EAAU,SAAV,CAA5B;AACA,QAAMiB,KAAK,GAAGjB,iBAAiB,CAAC,OAAD,EAAU,OAAV,CAA/B;AACA,QAAMkB,MAAM,GAAGvB,cAAc,EAA7B;AACA,QAAMwB,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAnB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACqB,SAAvB;AAAkC,MAAA,EAAE,EAAEN,EAAtC;AAA0C,MAAA,KAAK,EAAEC,KAAjD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,OAAP;AAAe,QAAA,CAAC,EAAC,MAAjB;AAAwB,QAAA,UAAU,EAAC,QAAnC;AAA4C,QAAA,cAAc,EAAC,QAA3D;AAAA,+BACE;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,GAAnB;AAAuB,YAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAA7B;AAAgD,YAAA,IAAI,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAA,uBACGE,IAAI,KAAK,OAAT,iBAAoB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADvB,EAEGA,IAAI,KAAK,YAAT,iBAAyB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA3CD;;GAAMJ,I;UACOf,iB,EACGA,iB,EACCL,c;;;MAHXoB,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport PtPoll from \"../../components/ptPoll\";\nimport CustomButton from \"../../components/button\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport useRoleContext from \"../../context/roleContext\";\nimport SkPoll from \"../../components/skPoll\";\nimport { Flex, Box, Center, useColorModeValue } from \"@chakra-ui/react\";\nimport styles from \"./index.module.css\";\nimport { forwardRef } from \"@chakra-ui/react\";\nimport { motion, isValidMotionProp } from \"framer-motion\";\n\nconst MotionBox = motion.custom(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return <Box ref={ref} {...chakraProps} />;\n  })\n);\nconst Quiz = () => {\n  const bg = useColorModeValue(\"white\", \"#110042\");\n  const color = useColorModeValue(\"white\", \"white\");\n  const result = useRoleContext();\n  const role = result[0];\n  console.log(role);\n  return (\n    <Flex>\n      <Box className={styles.container} bg={bg} color={color}>\n        <NavBar />\n        <Box h=\"100vh\" d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <main>\n            <CustomButton link=\"/\" icon={<ArrowBackIcon />} text={\"Back\"} />\n            <Center>\n              {role === \"coach\" && <SkPoll />}\n              {role === \"bootcamper\" && <PtPoll />}\n            </Center>\n          </main>\n        </Box>\n      </Box>\n      {/* <MotionBox\n          as=\"aside\"\n          animate={{\n            scale: [1, 2, 2, 1, 1],\n            rotate: [0, 0, 270, 270, 0],\n            borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"],\n          }}\n          transition={{\n            duration: 2,\n            ease: \"easeInOut\",\n            times: [0, 0.2, 0.5, 0.8, 1],\n            repeat: Infinity,\n            repeatType: \"loop\",\n            repeatDelay: 1,\n          }}\n          padding=\"2\"\n          bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n          width=\"12\"\n          height=\"12\"\n          display=\"flex\"\n        /> */}\n    </Flex>\n  );\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}