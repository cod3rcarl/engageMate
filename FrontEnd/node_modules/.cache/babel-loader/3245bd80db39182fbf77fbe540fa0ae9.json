{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\n\nfunction SkHand({\n  usersList,\n  handUsers\n}) {\n  _s();\n\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const {\n    user\n  } = useAuth0();\n  const [users, setUsers] = useState();\n  const [hands, setHands] = useState([]);\n  const [myColor, setMyColor] = useState(\"#2C276B\"); //const [handsRaised, setHandsRaised] = useState([]);\n\n  const context = useSocketContext();\n  const result = useRoleContext();\n  const role = result[0];\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name;\n\n  function createNotifications(handData) {\n    console.log({\n      handData\n    });\n    handData !== undefined ? Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function () {\n        window.focus();\n        this.close();\n      }\n    }) : console.log(\"no data\");\n    handData !== undefined ? notificationToast(handData) : console.log(\"no data\");\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\"\n    });\n  }\n\n  function removeHand(index, id) {\n    // immutably remove individual hand raise\n    console.log(id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]); //send a message to back end sockets to remove that user\n\n    socket.emit(\"speakerLowerHand\", {\n      id\n    });\n  }\n\n  useEffect(() => {\n    // let intervalId = setInterval(() => {\n    //   hands.length > 0 && playSound();\n    //   //clearInterval(intervalId);\n    // }, 5000);\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\"\n    });\n    socket.on(\"handRaiseInfo\", ({\n      handRaiseData\n    }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(handRaiseData);\n      console.log(handRaiseData.length);\n\n      if (handRaiseData === [] || handRaiseData === undefined) {\n        handleSetHands(handRaiseData);\n      } else {\n        console.log(\"hand raised info received\"); //setHands(handRaiseData);\n\n        handleSetHands(handRaiseData);\n        console.log(\"hands -\", hands);\n        console.log({\n          handRaiseData\n        });\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    });\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.notifySpot,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: hands.length > 0 ? styles.notify : styles.noNotify,\n        children: hands.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.handsList,\n      children: hands.map((h, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.handRaise,\n          children: [h.name, \" \", h.topic, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeHand(i, h.id),\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkHand, \"Iqx9KBKz2WkfZ5rTBRX2xn4IGJI=\", false, function () {\n  return [useAuth0, useSocketContext, useRoleContext];\n});\n\n_c = SkHand;\nexport default SkHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkHand\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js"],"names":["React","useState","useEffect","styles","useSocketContext","useRoleContext","useAuth0","Hand","createStandaloneToast","Push","SkHand","usersList","handUsers","user","users","setUsers","hands","setHands","myColor","setMyColor","context","result","role","socket","loggedUser","name","given_name","createNotifications","handData","console","log","undefined","create","body","topic","icon","timeout","onClick","window","focus","close","notificationToast","toast","title","description","status","duration","isClosable","position","removeHand","index","id","slice","emit","room","on","handRaiseData","length","handleSetHands","data","container","backgroundColor","notifySpot","notify","noNotify","handsList","map","h","i","handRaise"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAhB,EAA0C;AAAA;;AACxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,EAAzB;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,SAAD,CAAtC,CALwC,CAMxC;;AACA,QAAMmB,OAAO,GAAGhB,gBAAgB,EAAhC;AACA,QAAMiB,MAAM,GAAGhB,cAAc,EAA7B;AACA,QAAMiB,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAnB;AACA,QAAME,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAtB;AACA,QAAMI,UAAU,GAAGH,MAAM,CAAC,CAAD,CAAzB;AACA,QAAMI,IAAI,GAAGD,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEE,UAAzB;;AAEA,WAASC,mBAAT,CAA6BC,QAA7B,EAAuC;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AACAA,IAAAA,QAAQ,KAAKG,SAAb,GACItB,IAAI,CAACuB,MAAL,CAAa,GAAEJ,QAAQ,CAACH,IAAK,yBAA7B,EAAuD;AACrDQ,MAAAA,IAAI,EAAG,GAAEL,QAAQ,CAACM,KAAM,EAD6B;AAErDC,MAAAA,IAAI,EAAE,gBAF+C;AAGrDC,MAAAA,OAAO,EAAE,IAH4C;AAIrDC,MAAAA,OAAO,EAAE,YAAW;AAClBC,QAAAA,MAAM,CAACC,KAAP;AACA,aAAKC,KAAL;AACD;AAPoD,KAAvD,CADJ,GAUIX,OAAO,CAACC,GAAR,CAAY,SAAZ,CAVJ;AAWAF,IAAAA,QAAQ,KAAKG,SAAb,GACIU,iBAAiB,CAACb,QAAD,CADrB,GAEIC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAFJ;AAGD;;AAED,WAASW,iBAAT,CAA2Bb,QAA3B,EAAqC;AACnC,UAAMc,KAAK,GAAGlC,qBAAqB,EAAnC;AACAkC,IAAAA,KAAK,CAAC;AACJC,MAAAA,KAAK,EAAG,GAAEf,QAAQ,CAACH,IAAK,EADpB;AAEJmB,MAAAA,WAAW,EAAG,GAAEhB,QAAQ,CAACM,KAAM,EAF3B;AAGJW,MAAAA,MAAM,EAAE,SAHJ;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,UAAU,EAAE,IALR;AAMJC,MAAAA,QAAQ,EAAE;AANN,KAAD,CAAL;AAQD;;AAED,WAASC,UAAT,CAAoBC,KAApB,EAA2BC,EAA3B,EAA+B;AAC7B;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,EAAZ;AACAlC,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACoC,KAAN,CAAY,CAAZ,EAAeF,KAAf,CAAJ,EAA2B,GAAGlC,KAAK,CAACoC,KAAN,CAAYF,KAAK,GAAG,CAApB,CAA9B,CAAD,CAAR,CAH6B,CAI7B;;AACA3B,IAAAA,MAAM,CAAC8B,IAAP,CAAY,kBAAZ,EAAgC;AAC9BF,MAAAA;AAD8B,KAAhC;AAGD;;AAEDjD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AAEA;AACA;AAEAqB,IAAAA,MAAM,CAAC8B,IAAP,CAAY,eAAZ,EAA6B;AAC3B5B,MAAAA,IAAI,EAAEA,IADqB;AAE3B6B,MAAAA,IAAI,EAAE;AAFqB,KAA7B;AAKA/B,IAAAA,MAAM,CAACgC,EAAP,CAAU,eAAV,EAA2B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AAChD;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,aAAZ;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,aAAa,CAACC,MAA1B;;AACA,UAAID,aAAa,KAAK,EAAlB,IAAwBA,aAAa,KAAKzB,SAA9C,EAAyD;AACvD2B,QAAAA,cAAc,CAACF,aAAD,CAAd;AACD,OAFD,MAEO;AACL3B,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADK,CAEL;;AACA4B,QAAAA,cAAc,CAACF,aAAD,CAAd;AACA3B,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,KAAvB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAE0B,UAAAA;AAAF,SAAZ;AACA7B,QAAAA,mBAAmB,CAAC6B,aAAa,CAACA,aAAa,CAACC,MAAd,GAAuB,CAAxB,CAAd,CAAnB;AACD;AACF,KAdD;AAeD,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B1C,IAAAA,QAAQ,CAAC0C,IAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAExD,MAAM,CAACyD,SAAvB;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE3C;AAAnB,KAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAAC2D,UAAvB;AAAA,6BACE;AAAG,QAAA,SAAS,EAAE9C,KAAK,CAACyC,MAAN,GAAe,CAAf,GAAmBtD,MAAM,CAAC4D,MAA1B,GAAmC5D,MAAM,CAAC6D,QAAxD;AAAA,kBACGhD,KAAK,CAACyC;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAS,MAAA,SAAS,EAAEtD,MAAM,CAAC8D,SAA3B;AAAA,gBACGjD,KAAK,CAACkD,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAAA,+BACE;AAAI,UAAA,SAAS,EAAEjE,MAAM,CAACkE,SAAtB;AAAA,qBACGF,CAAC,CAAC1C,IADL,OACY0C,CAAC,CAACjC,KADd,eAEE;AAAQ,YAAA,OAAO,EAAE,MAAMe,UAAU,CAACmB,CAAD,EAAID,CAAC,CAAChB,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASiB,CAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA7GQ1D,M;UAEUJ,Q,EAKDF,gB,EACDC,c;;;KARRK,M;AA+GT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\n\nfunction SkHand({ usersList, handUsers }) {\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const { user } = useAuth0();\n  const [users, setUsers] = useState();\n  const [hands, setHands] = useState([]);\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  //const [handsRaised, setHandsRaised] = useState([]);\n  const context = useSocketContext();\n  const result = useRoleContext();\n  const role = result[0];\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n\n  function createNotifications(handData) {\n    console.log({ handData });\n    handData !== undefined\n      ? Push.create(`${handData.name} has raised their hand!`, {\n          body: `${handData.topic}`,\n          icon: \"/raisehand.png\",\n          timeout: 4000,\n          onClick: function() {\n            window.focus();\n            this.close();\n          },\n        })\n      : console.log(\"no data\");\n    handData !== undefined\n      ? notificationToast(handData)\n      : console.log(\"no data\");\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\",\n    });\n  }\n\n  function removeHand(index, id) {\n    // immutably remove individual hand raise\n    console.log(id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\n    //send a message to back end sockets to remove that user\n    socket.emit(\"speakerLowerHand\", {\n      id,\n    });\n  }\n\n  useEffect(() => {\n    // let intervalId = setInterval(() => {\n    //   hands.length > 0 && playSound();\n\n    //   //clearInterval(intervalId);\n    // }, 5000);\n\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\",\n    });\n\n    socket.on(\"handRaiseInfo\", ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(handRaiseData);\n      console.log(handRaiseData.length);\n      if (handRaiseData === [] || handRaiseData === undefined) {\n        handleSetHands(handRaiseData);\n      } else {\n        console.log(\"hand raised info received\");\n        //setHands(handRaiseData);\n        handleSetHands(handRaiseData);\n        console.log(\"hands -\", hands);\n        console.log({ handRaiseData });\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    });\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return (\n    <div className={styles.container} style={{ backgroundColor: myColor }}>\n      <div className={styles.notifySpot}>\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n          {hands.length}\n        </p>\n      </div>\n      <Hand />\n\n      {/* renders a box section which contains the ordered list of users with raised hands */}\n      <section className={styles.handsList}>\n        {hands.map((h, i) => (\n          <ul key={i}>\n            <li className={styles.handRaise}>\n              {h.name} {h.topic}\n              <button onClick={() => removeHand(i, h.id)}>✖</button>\n            </li>\n          </ul>\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default SkHand;\n"]},"metadata":{},"sourceType":"module"}