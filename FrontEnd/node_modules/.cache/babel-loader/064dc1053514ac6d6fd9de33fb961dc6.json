{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Unauthorised from \"../unauthorised\";\nimport useRoleContext from \"../../context/roleContext\";\nimport { config } from \"../../config\";\nconst envUrl = config.url;\n\nconst Authorised = () => {\n  _s();\n\n  const data = useRoleContext();\n  const role = data[0];\n  const setRole = data[1];\n  const setLoggedUser = data[3];\n  const {\n    user\n  } = useAuth0(); // const [loggedUser, setLoggedUser] = useState(user);\n\n  let url = `${envUrl}/users/${user.email}`;\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(url);\n      const result = await data.json();\n      result.success === false ? setRole(\"unauthorised\") : setRole(result.data.role);\n      console.log(role);\n    }\n\n    getUsers(); //loggedUser is the Auth0 information\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: role === \"unauthorised\" ? /*#__PURE__*/_jsxDEV(Unauthorised, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FeaturedMenu, {\n      role: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authorised, \"J4ct48YKtCbjOzJidhyq1Jip3X4=\", false, function () {\n  return [useRoleContext, useAuth0];\n});\n\n_c = Authorised;\nexport default Authorised;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorised\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js"],"names":["React","useEffect","useAuth0","FeaturedMenu","Unauthorised","useRoleContext","config","envUrl","url","Authorised","data","role","setRole","setLoggedUser","user","email","getUsers","fetch","result","json","success","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,MAAMC,MAAM,GAAGD,MAAM,CAACE,GAAtB;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAGL,cAAc,EAA3B;AACA,QAAMM,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAjB;AACA,QAAME,OAAO,GAAGF,IAAI,CAAC,CAAD,CAApB;AACA,QAAMG,aAAa,GAAGH,IAAI,CAAC,CAAD,CAA1B;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAWZ,QAAQ,EAAzB,CANuB,CAOvB;;AAEA,MAAIM,GAAG,GAAI,GAAED,MAAO,UAASO,IAAI,CAACC,KAAM,EAAxC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,QAAf,GAA0B;AACxBH,MAAAA,aAAa,CAACC,IAAD,CAAb;AACA,YAAMJ,IAAI,GAAG,MAAMO,KAAK,CAACT,GAAD,CAAxB;AACA,YAAMU,MAAM,GAAG,MAAMR,IAAI,CAACS,IAAL,EAArB;AACAD,MAAAA,MAAM,CAACE,OAAP,KAAmB,KAAnB,GACIR,OAAO,CAAC,cAAD,CADX,GAEIA,OAAO,CAACM,MAAM,CAACR,IAAP,CAAYC,IAAb,CAFX;AAGAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACD;;AAEDK,IAAAA,QAAQ,GAXM,CAad;AACD,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAA,cACGL,IAAI,KAAK,cAAT,gBACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnCD;;GAAMF,U;UACSJ,c,EAKIH,Q;;;KANbO,U;AAqCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Unauthorised from \"../unauthorised\";\n\nimport useRoleContext from \"../../context/roleContext\";\nimport { config } from \"../../config\";\nconst envUrl = config.url;\nconst Authorised = () => {\n  const data = useRoleContext();\n  const role = data[0];\n  const setRole = data[1];\n  const setLoggedUser = data[3];\n\n  const { user } = useAuth0();\n  // const [loggedUser, setLoggedUser] = useState(user);\n\n  let url = `${envUrl}/users/${user.email}`;\n\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(url);\n      const result = await data.json();\n      result.success === false\n        ? setRole(\"unauthorised\")\n        : setRole(result.data.role);\n      console.log(role);\n    }\n\n    getUsers();\n\n    //loggedUser is the Auth0 information\n  }, []);\n  return (\n    <div>\n      {role === \"unauthorised\" ? (\n        <Unauthorised />\n      ) : (\n        <FeaturedMenu role={role} />\n      )}\n    </div>\n  );\n};\n\nexport default Authorised;\n"]},"metadata":{},"sourceType":"module"}