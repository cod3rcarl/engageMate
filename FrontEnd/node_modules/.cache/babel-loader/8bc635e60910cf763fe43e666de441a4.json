{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Radio } from \"@chakra-ui/react\";\n\nfunction SkPoll() {\n  _s();\n\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [correct, setCorrect] = useState();\n  const arr = [];\n\n  for (let i = 0; i < value; i++) {\n    // console.log(i);\n    arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: `set option ${i + 1}` // still trying to figure how to save the value of the input fields to something?\n        ,\n        width: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u2705\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n    console.log(arr);\n  }\n\n  function add() {\n    setValue(value + 1);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n      console.log({\n        question\n      });\n    }\n\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select A Question\",\n      onChange: handleSession // isDisabled={count > 0 ? true : false}\n      ,\n      className: style.select,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Which one is the odd one out?\",\n        children: \"Which one is the odd one out?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"True or False:\",\n        children: \"True or False:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"custom\",\n        children: \"Set a custom question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      focusBorderColor: \"lime\",\n      className: style.borderColor,\n      style: custom ? {\n        display: \"block\",\n        textAlign: \"center\",\n        borderColor: \"grey\"\n      } : {\n        display: \"none\"\n      },\n      placeholder: \"set custom question...\",\n      type: \"text\",\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"optionsInput\",\n      children: arr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      children: [value < 4 ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: add,\n        children: \"\\u270F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: remove,\n        children: \"\\uD83D\\uDDD1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkPoll, \"4a5I5RIW/x47QW4GMxL8mF/rLz8=\");\n\n_c = SkPoll;\nexport default SkPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkPoll\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skPoll/index.js"],"names":["React","useState","style","Input","Select","Stack","HStack","Button","Radio","SkPoll","question","setQuestion","custom","setCustom","myColor","value","setValue","correct","setCorrect","arr","i","push","remove","pop","console","log","add","handleSession","e","target","container","backgroundColor","select","borderColor","display","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./index.module.css\";\nimport { Input, Select, Stack, HStack, Button, Radio } from \"@chakra-ui/react\";\nfunction SkPoll() {\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [custom, setCustom] = useState(false);\n  const [myColor] = useState(\"#2C276B\");\n  const [value, setValue] = useState(0);\n  const [correct, setCorrect] = useState();\n\n  const arr = [];\n\n  for (let i = 0; i < value; i++) {\n    // console.log(i);\n    arr.push(\n      <div>\n        <Input\n          type=\"text\"\n          placeholder={`set option ${i + 1}`}\n          // still trying to figure how to save the value of the input fields to something?\n          width=\"300px\"\n        ></Input>\n        <Button>✅</Button>\n      </div>\n    );\n  }\n\n  function remove() {\n    arr.pop();\n    setValue(value - 1);\n    console.log(arr);\n  }\n\n  function add() {\n    setValue(value + 1);\n  }\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setQuestion(e.target.value);\n      console.log({ question });\n    }\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n    }\n  }\n  return (\n    <div className={style.container} style={{ backgroundColor: myColor }}>\n      {/* <h1>The Question Here</h1> */}\n      <Select\n        placeholder=\"Select A Question\"\n        onChange={handleSession}\n        // isDisabled={count > 0 ? true : false}\n        className={style.select}\n      >\n        <option value=\"Which one is the odd one out?\">\n          Which one is the odd one out?\n        </option>\n        <option value=\"True or False:\">True or False:</option>\n        {/* custom question */}\n        <option value=\"custom\">Set a custom question.</option>\n      </Select>\n      <Input\n        focusBorderColor=\"lime\"\n        className={style.borderColor}\n        style={\n          custom\n            ? {\n                display: \"block\",\n                textAlign: \"center\",\n                borderColor: \"grey\",\n              }\n            : { display: \"none\" }\n        }\n        placeholder=\"set custom question...\"\n        type=\"text\"\n        onChange={(e) => setQuestion(e.target.value)}\n      />\n      <Stack className=\"optionsInput\">{arr}</Stack>\n      <HStack>\n        {value < 4 ? <Button onClick={add}>✏️</Button> : \"\"}\n        <Button onClick={remove}>🗑</Button>\n        <Button>Submit</Button>\n      </HStack>\n    </div>\n  );\n}\nexport default SkPoll;\n"]},"metadata":{},"sourceType":"module"}