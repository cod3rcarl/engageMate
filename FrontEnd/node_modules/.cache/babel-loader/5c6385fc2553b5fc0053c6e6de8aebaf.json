{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast, HStack, Button } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nfunction SkHand() {\n  _s();\n\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const [hands, setHands] = useState([{\n    name: \"\",\n    topic: \"No Hands Raised\"\n  }]); //const [handsRaised, setHandsRaised] = useState([]);\n\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n  const loggedUser = result[2];\n  const name = (loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name) || \"Ben\";\n\n  function createNotifications(handData) {\n    console.log({\n      handData\n    });\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function () {\n        window.focus();\n        this.close();\n      }\n    });\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\"\n    });\n  }\n\n  function removeHand(index, id) {\n    //   // immutably remove individual hand raise\n    console.log(id);\n    console.log(socket.id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]); //send a message to back end sockets to remove that user\n\n    socket.emit(\"speakerLowerHand\", {\n      id\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\"\n    });\n\n    const handler = ({\n      handRaiseData\n    }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\"); //setHands(handRaiseData);\n\n      handleSetHands(handRaiseData);\n      console.log(\"hands -\", hands);\n      console.log({\n        handRaiseData\n      });\n\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({\n      handRaiseData\n    }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\"); //setHands(handRaiseData);\n\n      handleSetHands(handRaiseData);\n    };\n\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      console.log(\"user left room\");\n      socket.off(\"handRaiseInfo\");\n      socket.off(\"lowerHandRaiseInfo\");\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  console.log(hands);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    style: {\n      backgroundColor: \"#2C276B\",\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.notifySpot,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: hands.length > 0 ? styles.notify : styles.noNotify,\n        children: hands.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), hands.length < 1 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      children: \"No Hands Raised\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.handsList,\n      children: hands.map((h, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.handRaise,\n            children: [h.name ? h.name : \"Guest\", \": \", h.topic, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.myBtn,\n              onClick: () => removeHand(i, h.id),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\n              , {\n                className: styles.myBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      className: styles.box,\n      children: hands.map((h, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: h.picture,\n        alt: name,\n        className: styles.picture\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        _hover: {\n          background: \"white\",\n          color: \"#2C276B\"\n        },\n        variant: \"outline\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), \" Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkHand, \"jFxW4FKwmkF8KXqXIN9gJ8ENoq8=\", false, function () {\n  return [useSocketContext, useRoleContext];\n});\n\n_c = SkHand;\nexport default SkHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkHand\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js"],"names":["React","useState","useEffect","styles","useSocketContext","useRoleContext","Hand","createStandaloneToast","HStack","Button","Push","ArrowBackIcon","CloseIcon","Link","SkHand","hands","setHands","name","topic","context","socket","result","loggedUser","given_name","createNotifications","handData","console","log","create","body","icon","timeout","onClick","window","focus","close","notificationToast","toast","title","description","status","duration","isClosable","position","removeHand","index","id","slice","emit","room","handler","handRaiseData","handleSetHands","length","lowerHandler","on","off","data","container","backgroundColor","color","notifySpot","notify","noNotify","fontSize","handsList","map","h","i","handRaise","myBtn","box","picture","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast, HStack, Button } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport { Link } from \"react-router-dom\";\nfunction SkHand() {\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const [hands, setHands] = useState([{ name: \"\", topic: \"No Hands Raised\" }]);\n  //const [handsRaised, setHandsRaised] = useState([]);\n  const context = useSocketContext();\n  const socket = context[0];\n  const result = useRoleContext();\n\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name || \"Ben\";\n\n  function createNotifications(handData) {\n    console.log({ handData });\n\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function() {\n        window.focus();\n        this.close();\n      },\n    });\n\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\",\n    });\n  }\n\n  function removeHand(index, id) {\n    //   // immutably remove individual hand raise\n    console.log(id);\n    console.log(socket.id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\n    //send a message to back end sockets to remove that user\n    socket.emit(\"speakerLowerHand\", {\n      id,\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\",\n    });\n\n    const handler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n      console.log(\"hands -\", hands);\n      console.log({ handRaiseData });\n\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n    };\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      console.log(\"user left room\");\n      socket.off(\"handRaiseInfo\");\n      socket.off(\"lowerHandRaiseInfo\");\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  console.log(hands);\n\n  return (\n    <div\n      className={styles.container}\n      style={{ backgroundColor: \"#2C276B\", color: \"white\" }}\n    >\n      <div className={styles.notifySpot}>\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n          {hands.length}\n        </p>\n      </div>\n      <Hand />\n      {hands.length < 1 ? (\n        <h1 style={{ fontSize: \"1rem\" }}>No Hands Raised</h1>\n      ) : (\n        <section className={styles.handsList}>\n          {hands.map((h, i) => (\n            <div>\n              <ul key={i}>\n                <li key={i} className={styles.handRaise}>\n                  {h.name ? h.name : \"Guest\"}: {h.topic}\n                  <button\n                    key={i}\n                    className={styles.myBtn}\n                    onClick={() => removeHand(i, h.id)}\n                  >\n                    <CloseIcon\n                      //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\n                      className={styles.myBtn}\n                    />\n                  </button>\n                </li>\n              </ul>\n            </div>\n          ))}\n        </section>\n      )}\n      <HStack className={styles.box}>\n        {hands.map((h, i) => (\n          <img src={h.picture} key={i} alt={name} className={styles.picture} />\n        ))}\n      </HStack>\n      <Link to=\"/\">\n        {\" \"}\n        <Button\n          _hover={{\n            background: \"white\",\n            color: \"#2C276B\",\n          }}\n          variant=\"outline\"\n        >\n          <ArrowBackIcon /> Back\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default SkHand;\n"]},"metadata":{},"sourceType":"module"}