{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Button, Icon, Input, Select } from \"@chakra-ui/react\";\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\nimport Thumb from \"../thumb\";\nimport Timer from \"../timer/index\";\n\nfunction SkView({\n  data,\n  startSession,\n  endSession,\n  count,\n  time,\n  setTime\n}) {\n  _s();\n\n  const [question, setQuestion] = useState(\"Set Custom Question\");\n  const [timer, setTimer] = useState(\"Custom\");\n  const [myColor, setMyColor] = useState(\"#2C276B\");\n  const [custom, setCustom] = useState(false);\n  const [def, setDef] = useState(true);\n  console.log({\n    question\n  });\n\n  function handleSession(e) {\n    if (e.target.value !== \"custom\") {\n      setCustom(false);\n      setDef(true);\n      setQuestion(e.target.value);\n      console.log({\n        question\n      });\n    }\n\n    if (e.target.value === \"custom\") {\n      setCustom(true);\n      setDef(false);\n    } //else {\n    //   let customQ = prompt(\"whats your question?\");\n    //   setQuestion(customQ);\n    //   console.log({ question });\n    // }\n\n  }\n\n  function handleTimer(e) {\n    if (e.target.value !== \"custom\") {\n      setTimer(Number(e.target.value));\n      setTime(Number(e.target.value));\n      console.log({\n        timer\n      });\n    } else {\n      let customT = prompt(\"How many seconds should be allowed?\");\n      setTimer(Number(customT));\n      setTime(Number(customT));\n      console.log({\n        timer\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (data.outcome === 0) {\n      setMyColor(\"#2C276B\");\n    } else if (data.outcome <= 33) {\n      setMyColor(\"red\");\n    } else if (data.outcome > 33 && data.outcome <= 66) {\n      setMyColor(\"orange\");\n    } else if (data.outcome > 66 && data.outcome <= 100) {\n      setMyColor(\"green\");\n    }\n  }, [data.outcome]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    style: {\n      backgroundColor: myColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select Question\",\n      onChange: handleSession,\n      isDisabled: count > 0 ? true : false,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"How are you feeling?\",\n        children: \"How are you feeling?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Did you understand that?\",\n        children: \"Did you understand that?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Are you comfortable with moving on?\",\n        children: \"Are you comfortable with moving on?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"custom\",\n        children: \"Set a custom question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      focusBorderColor: \"lime\",\n      style: custom ? {\n        display: \"block\",\n        textAlign: \"center\"\n      } : {\n        display: \"none\"\n      },\n      placeholder: \"set custom question...\",\n      type: \"text\",\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Timer Amount\",\n      onChange: handleTimer,\n      isDisabled: count > 0 ? true : false,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"10\",\n        children: \"10 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"15\",\n        children: \"15 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"20\",\n        children: \"20 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"25\",\n        children: \"25 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"30\",\n        children: \"30 Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"custom\",\n        children: `${timer} Seconds`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Thumb, {\n      value: data.outcome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.valueInformation,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Value: \", data.outcome, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [data.responses, \"/\", data.participants, \" \", /*#__PURE__*/_jsxDEV(Icon, {\n          as: MdPeople\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      count: count,\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: style.button,\n        rightIcon: /*#__PURE__*/_jsxDEV(MdUpdate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 22\n        }, this),\n        colorScheme: \"green\",\n        onClick: () => startSession({\n          question,\n          timer\n        }),\n        children: \"Start Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: style.button,\n        leftIcon: /*#__PURE__*/_jsxDEV(MdStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this),\n        colorScheme: \"red\",\n        onClick: endSession,\n        isDisabled: count > 0 ? false : true,\n        children: \"Stop Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkView, \"VrWr8X3rDgpJNFMUs4m+ot1riFI=\");\n\n_c = SkView;\nexport default SkView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkView\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skView/index.js"],"names":["React","useState","useEffect","style","Button","Icon","Input","Select","MdUpdate","MdStop","MdPeople","Thumb","Timer","SkView","data","startSession","endSession","count","time","setTime","question","setQuestion","timer","setTimer","myColor","setMyColor","custom","setCustom","def","setDef","console","log","handleSession","e","target","value","handleTimer","Number","customT","prompt","outcome","container","backgroundColor","display","textAlign","valueInformation","responses","participants","buttons","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport { Button, Icon, Input, Select } from \"@chakra-ui/react\";\r\nimport { MdUpdate, MdStop, MdPeople } from \"react-icons/md\";\r\nimport Thumb from \"../thumb\";\r\nimport Timer from \"../timer/index\";\r\n\r\nfunction SkView({ data, startSession, endSession, count, time, setTime }) {\r\n  const [question, setQuestion] = useState(\"Set Custom Question\");\r\n  const [timer, setTimer] = useState(\"Custom\");\r\n  const [myColor, setMyColor] = useState(\"#2C276B\");\r\n  const [custom, setCustom] = useState(false);\r\n  const [def, setDef] = useState(true);\r\n\r\n  console.log({ question });\r\n  function handleSession(e) {\r\n    if (e.target.value !== \"custom\") {\r\n      setCustom(false);\r\n      setDef(true);\r\n      setQuestion(e.target.value);\r\n      console.log({ question });\r\n    }\r\n    if (e.target.value === \"custom\") {\r\n      setCustom(true);\r\n      setDef(false);\r\n    }\r\n    //else {\r\n    //   let customQ = prompt(\"whats your question?\");\r\n    //   setQuestion(customQ);\r\n    //   console.log({ question });\r\n    // }\r\n  }\r\n\r\n  function handleTimer(e) {\r\n    if (e.target.value !== \"custom\") {\r\n      setTimer(Number(e.target.value));\r\n      setTime(Number(e.target.value));\r\n      console.log({ timer });\r\n    } else {\r\n      let customT = prompt(\"How many seconds should be allowed?\");\r\n      setTimer(Number(customT));\r\n      setTime(Number(customT));\r\n      console.log({ timer });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (data.outcome === 0) {\r\n      setMyColor(\"#2C276B\");\r\n    } else if (data.outcome <= 33) {\r\n      setMyColor(\"red\");\r\n    } else if (data.outcome > 33 && data.outcome <= 66) {\r\n      setMyColor(\"orange\");\r\n    } else if (data.outcome > 66 && data.outcome <= 100) {\r\n      setMyColor(\"green\");\r\n    }\r\n  }, [data.outcome]);\r\n\r\n  return (\r\n    <div className={style.container} style={{ backgroundColor: myColor }}>\r\n      {/* <h1>The Question Here</h1> */}\r\n      <Select\r\n        placeholder=\"Select Question\"\r\n        onChange={handleSession}\r\n        isDisabled={count > 0 ? true : false}\r\n      >\r\n        <option value=\"How are you feeling?\">How are you feeling?</option>\r\n        <option value=\"Did you understand that?\">\r\n          Did you understand that?\r\n        </option>\r\n        <option value=\"Are you comfortable with moving on?\">\r\n          Are you comfortable with moving on?\r\n        </option>\r\n        {/* custom question */}\r\n        <option value=\"custom\">Set a custom question.</option>\r\n      </Select>\r\n      <Input\r\n        focusBorderColor=\"lime\"\r\n        style={\r\n          custom\r\n            ? {\r\n                display: \"block\",\r\n                textAlign: \"center\",\r\n              }\r\n            : { display: \"none\" }\r\n        }\r\n        placeholder=\"set custom question...\"\r\n        type=\"text\"\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n      />\r\n      <Select\r\n        placeholder=\"Timer Amount\"\r\n        onChange={handleTimer}\r\n        isDisabled={count > 0 ? true : false}\r\n      >\r\n        <option value=\"10\">10 Seconds</option>\r\n        <option value=\"15\">15 Seconds</option>\r\n        <option value=\"20\">20 Seconds</option>\r\n        <option value=\"25\">25 Seconds</option>\r\n        <option value=\"30\">30 Seconds</option>\r\n        <option value=\"custom\">{`${timer} Seconds`}</option>\r\n      </Select>\r\n      <Thumb value={data.outcome} />\r\n      <div className={style.valueInformation}>\r\n        <h3>Value: {data.outcome}%</h3>\r\n        <p>\r\n          {data.responses}/{data.participants} {<Icon as={MdPeople} />}\r\n        </p>\r\n      </div>\r\n      <Timer count={count} time={time} />\r\n      <p>{count}</p>\r\n      <div className={style.buttons}>\r\n        <Button\r\n          className={style.button}\r\n          rightIcon={<MdUpdate />}\r\n          colorScheme=\"green\"\r\n          onClick={() => startSession({ question, timer })}\r\n        >\r\n          Start Timer\r\n        </Button>\r\n\r\n        <Button\r\n          className={style.button}\r\n          leftIcon={<MdStop />}\r\n          colorScheme=\"red\"\r\n          onClick={endSession}\r\n          isDisabled={count > 0 ? false : true}\r\n        >\r\n          Stop Timer\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkView;\r\n"]},"metadata":{},"sourceType":"module"}