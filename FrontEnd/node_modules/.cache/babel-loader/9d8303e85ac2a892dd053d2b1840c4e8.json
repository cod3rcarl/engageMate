{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\nlet url = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5000/users\";\n\nconst Authorised = () => {\n  _s();\n\n  const [role, setRole] = useState(\"\");\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(user);\n  console.log(loggedUser);\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const res = await fetch(url);\n      const result = await res.json();\n      const data = result.data;\n      const userEmail = data.map(item => item.email);\n      userEmail.includes(loggedUser.email) ? setRole(loggedUser.role) : setRole(\"guest\");\n    }\n\n    getUsers(); //loggedUser is the Auth0 information\n  }, [loggedUser, role, user]);\n  console.log(role);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(FeaturedMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Authorised, \"TZDgXugJKMZYC3vyk3TmYXgkCLE=\", false, function () {\n  return [useAuth0];\n});\n\n_c = Authorised;\nexport default Authorised;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorised\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/pages/authorised/authorised.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","useAuth0","FeaturedMenu","Login","url","process","env","REACT_APP_BACKEND_URL","Authorised","role","setRole","isAuthenticated","user","loggedUser","setLoggedUser","console","log","getUsers","res","fetch","result","json","data","userEmail","map","item","email","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqC,6BAA/C;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM;AAAEgB,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACiB,IAAD,CAA5C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqB,QAAf,GAA0B;AACxBH,MAAAA,aAAa,CAACF,IAAD,CAAb;AACA,YAAMM,GAAG,GAAG,MAAMC,KAAK,CAACf,GAAD,CAAvB;AACA,YAAMgB,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;AACA,YAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,YAAMC,SAAS,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,KAAxB,CAAlB;AACAH,MAAAA,SAAS,CAACI,QAAV,CAAmBd,UAAU,CAACa,KAA9B,IACIhB,OAAO,CAACG,UAAU,CAACJ,IAAZ,CADX,GAEIC,OAAO,CAAC,OAAD,CAFX;AAGD;;AAEDO,IAAAA,QAAQ,GAZM,CAcd;AACD,GAfQ,EAeN,CAACJ,UAAD,EAAaJ,IAAb,EAAmBG,IAAnB,CAfM,CAAT;AAgBAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA,gBAAiBE,eAAe,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAsB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMH,U;UAG8BP,Q;;;KAH9BO,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport FeaturedMenu from \"../../pages/featureMenu\";\nimport Login from \"../../pages/login/index\";\n\nlet url = process.env.REACT_APP_BACKEND_URL || \"http://localhost:5000/users\";\nconst Authorised = () => {\n  const [role, setRole] = useState(\"\");\n\n  const { isAuthenticated, user } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(user);\n  console.log(loggedUser);\n\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const res = await fetch(url);\n      const result = await res.json();\n      const data = result.data;\n      const userEmail = data.map((item) => item.email);\n      userEmail.includes(loggedUser.email)\n        ? setRole(loggedUser.role)\n        : setRole(\"guest\");\n    }\n\n    getUsers();\n\n    //loggedUser is the Auth0 information\n  }, [loggedUser, role, user]);\n  console.log(role);\n  return (\n    <div>\n      <Route path=\"/\">{isAuthenticated ? <FeaturedMenu /> : <Login />}</Route>\n    </div>\n  );\n};\n\nexport default Authorised;\n"]},"metadata":{},"sourceType":"module"}