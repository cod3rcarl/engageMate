{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport CustomButton from \"../button\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\n\nfunction SkHand() {\n  _s();\n\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const [hands, setHands] = useState([{\n    name: \"\",\n    topic: \"No Hands Raised\"\n  }]); //const [handsRaised, setHandsRaised] = useState([]);\n\n  const context = useSocketContext();\n  const result = useRoleContext();\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.given_name;\n\n  function createNotifications(handData) {\n    console.log({\n      handData\n    });\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function () {\n        window.focus();\n        this.close();\n      }\n    });\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\"\n    });\n  }\n\n  function removeHand(index, id) {\n    //   // immutably remove individual hand raise\n    console.log(id);\n    console.log(socket.id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]); //send a message to back end sockets to remove that user\n\n    socket.emit(\"speakerLowerHand\", {\n      id\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\"\n    });\n\n    const handler = ({\n      handRaiseData\n    }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\"); //setHands(handRaiseData);\n\n      handleSetHands(handRaiseData);\n      console.log(\"hands -\", hands);\n      console.log({\n        handRaiseData\n      });\n\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({\n      handRaiseData\n    }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\"); //setHands(handRaiseData);\n\n      handleSetHands(handRaiseData);\n    };\n\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      console.log(\"user left room\");\n      socket.off(\"handRaiseInfo\", handler);\n      socket.off(\"lowerHandRaiseInfo\", lowerHandler);\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    style: {\n      backgroundColor: \"#2C276B\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.notifySpot,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: hands.length > 0 ? styles.notify : styles.noNotify,\n        children: hands.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.handsList,\n      children: hands.map((h, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.handRaise,\n          children: [h.name ? h.name : \"Guest\", \": \", h.topic, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.myBtn,\n            onClick: () => removeHand(i, h.id),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\n            , {\n              className: styles.myBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: h.picture,\n          alt: name,\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      className: styles.backButton,\n      link: \"/\",\n      icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this),\n      text: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkHand, \"jFxW4FKwmkF8KXqXIN9gJ8ENoq8=\", false, function () {\n  return [useSocketContext, useRoleContext];\n});\n\n_c = SkHand;\nexport default SkHand;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkHand\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/skHand/index.js"],"names":["React","useState","useEffect","styles","useSocketContext","useRoleContext","Hand","createStandaloneToast","Push","CustomButton","ArrowBackIcon","CloseIcon","SkHand","hands","setHands","name","topic","context","result","socket","loggedUser","given_name","createNotifications","handData","console","log","create","body","icon","timeout","onClick","window","focus","close","notificationToast","toast","title","description","status","duration","isClosable","position","removeHand","index","id","slice","emit","room","handler","handRaiseData","handleSetHands","length","lowerHandler","on","off","data","container","backgroundColor","notifySpot","notify","noNotify","handsList","map","h","i","handRaise","myBtn","picture","backButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./index.module.css\";\nimport useSocketContext from \"../../context/socketContext\";\nimport useRoleContext from \"../../context/roleContext\";\nimport Hand from \"../hand\";\nimport { createStandaloneToast } from \"@chakra-ui/react\";\nimport Push from \"push.js\";\nimport CustomButton from \"../button\";\nimport { ArrowBackIcon, CloseIcon } from \"@chakra-ui/icons\";\n\nfunction SkHand() {\n  //when hand is raised, server adds them to a list of raised hands - name, pic\n  const [hands, setHands] = useState([{ name: \"\", topic: \"No Hands Raised\" }]);\n  //const [handsRaised, setHandsRaised] = useState([]);\n  const context = useSocketContext();\n  const result = useRoleContext();\n  const socket = context[0];\n  const loggedUser = result[2];\n  const name = loggedUser?.given_name;\n\n  function createNotifications(handData) {\n    console.log({ handData });\n\n    Push.create(`${handData.name} has raised their hand!`, {\n      body: `${handData.topic}`,\n      icon: \"/raisehand.png\",\n      timeout: 4000,\n      onClick: function() {\n        window.focus();\n        this.close();\n      },\n    });\n\n    notificationToast(handData);\n  }\n\n  function notificationToast(handData) {\n    const toast = createStandaloneToast();\n    toast({\n      title: `${handData.name}`,\n      description: `${handData.topic}`,\n      status: \"success\",\n      duration: 4000,\n      isClosable: true,\n      position: \"top\",\n    });\n  }\n\n  function removeHand(index, id) {\n    //   // immutably remove individual hand raise\n    console.log(id);\n    console.log(socket.id);\n    setHands([...hands.slice(0, index), ...hands.slice(index + 1)]);\n    //send a message to back end sockets to remove that user\n    socket.emit(\"speakerLowerHand\", {\n      id,\n    });\n  }\n\n  useEffect(() => {\n    socket.emit(\"raisehandroom\", {\n      name: name,\n      room: \"raisehand\",\n    });\n\n    const handler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n      console.log(\"hands -\", hands);\n      console.log({ handRaiseData });\n\n      if (handRaiseData.length !== 0) {\n        createNotifications(handRaiseData[handRaiseData.length - 1]);\n      }\n    };\n\n    const lowerHandler = ({ handRaiseData }) => {\n      // setHandsRaised(handRaiseSubmissions);\n      console.log(\"hand raised info received\");\n      //setHands(handRaiseData);\n      handleSetHands(handRaiseData);\n    };\n    socket.on(\"handRaiseInfo\", handler);\n    socket.on(\"lowerHandRaiseInfo\", lowerHandler);\n\n    return () => {\n      socket.emit(\"leaveRaiseHand\");\n      console.log(\"user left room\");\n      socket.off(\"handRaiseInfo\", handler);\n      socket.off(\"lowerHandRaiseInfo\", lowerHandler);\n    };\n  }, []);\n\n  function handleSetHands(data) {\n    setHands(data);\n  }\n\n  return (\n    <div className={styles.container} style={{ backgroundColor: \"#2C276B\" }}>\n      <div className={styles.notifySpot}>\n        <p className={hands.length > 0 ? styles.notify : styles.noNotify}>\n          {hands.length}\n        </p>\n      </div>\n      <Hand />\n\n      {/* renders a box section which contains the ordered list of users with raised hands */}\n      <section className={styles.handsList}>\n        {hands.map((h, i) => (\n          <ul key={i}>\n            <li className={styles.handRaise}>\n              {h.name ? h.name : \"Guest\"}: {h.topic}\n              <button\n                className={styles.myBtn}\n                onClick={() => removeHand(i, h.id)}\n              >\n                <CloseIcon\n                  //style={{ color: \"white\", width: \"1rem\", height: \"1rem\" }}\n                  className={styles.myBtn}\n                />\n              </button>\n            </li>\n            <img src={h.picture} alt={name} className={styles.picture} />\n          </ul>\n        ))}\n      </section>\n      <CustomButton\n        className={styles.backButton}\n        link=\"/\"\n        icon={<ArrowBackIcon />}\n        text={\"Back\"}\n      />\n    </div>\n  );\n}\n\nexport default SkHand;\n"]},"metadata":{},"sourceType":"module"}