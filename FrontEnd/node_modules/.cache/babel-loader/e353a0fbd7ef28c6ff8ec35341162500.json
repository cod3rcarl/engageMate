{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/excel/excel.js\",\n    _s = $RefreshSig$();\n\nimport XLSX from \"xlsx\";\nimport React, { useState } from \"react\";\nlet dummy = [{\n  name: \"jayanth\",\n  data: \"scd\",\n  abc: \"sdef\"\n}];\n\nconst Excel = () => {\n  _s();\n\n  console.log(window.XLSX);\n  const [dummyData, setDummyData] = useState(dummy);\n  const [selectedFile, setSelectedFile] = useState();\n  const [json, setJson] = useState(); // let data = [\n  //   {\n  //     name: \"jayanth\",\n  //     data: \"scd\",\n  //     abc: \"sdef\",\n  //   },\n  // ];\n\n  const handleClick = () => {\n    XLSX.utils.json_to_sheet(dummyData, \"out.xlsx\");\n\n    if (selectedFile) {\n      let fileReader = new FileReader();\n      fileReader.readAsBinaryString(selectedFile);\n\n      fileReader.onload = event => {\n        let data = event.target.result;\n        let workbook = XLSX.read(data, {\n          type: \"binary\"\n        });\n        console.log(workbook);\n        workbook.SheetNames.forEach(sheet => {\n          let rowObject = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheet]);\n          console.log(rowObject);\n          setJson(JSON.stringify(rowObject, undefined, 4));\n        });\n      };\n    }\n  };\n\n  const handleChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xls,.xlsx\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: json\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Excel, \"oLQq/DifxlpUzwG78KA7Nq4jx3U=\");\n\n_c = Excel;\nexport default Excel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Excel\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/excel/excel.js"],"names":["XLSX","React","useState","dummy","name","data","abc","Excel","console","log","window","dummyData","setDummyData","selectedFile","setSelectedFile","json","setJson","handleClick","utils","json_to_sheet","fileReader","FileReader","readAsBinaryString","onload","event","target","result","workbook","read","type","SheetNames","forEach","sheet","rowObject","sheet_to_row_object_array","Sheets","JSON","stringify","undefined","handleChange","e","files"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,IAAIC,KAAK,GAAG,CACV;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADU,CAAZ;;AAQA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACV,IAAnB;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACC,KAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,EAAhC,CAJkB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxBjB,IAAAA,IAAI,CAACkB,KAAL,CAAWC,aAAX,CAAyBR,SAAzB,EAAoC,UAApC;;AACA,QAAIE,YAAJ,EAAkB;AAChB,UAAIO,UAAU,GAAG,IAAIC,UAAJ,EAAjB;AACAD,MAAAA,UAAU,CAACE,kBAAX,CAA8BT,YAA9B;;AACAO,MAAAA,UAAU,CAACG,MAAX,GAAqBC,KAAD,IAAW;AAC7B,YAAInB,IAAI,GAAGmB,KAAK,CAACC,MAAN,CAAaC,MAAxB;AACA,YAAIC,QAAQ,GAAG3B,IAAI,CAAC4B,IAAL,CAAUvB,IAAV,EAAgB;AAAEwB,UAAAA,IAAI,EAAE;AAAR,SAAhB,CAAf;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,QAAZ;AACAA,QAAAA,QAAQ,CAACG,UAAT,CAAoBC,OAApB,CAA6BC,KAAD,IAAW;AACrC,cAAIC,SAAS,GAAGjC,IAAI,CAACkB,KAAL,CAAWgB,yBAAX,CACdP,QAAQ,CAACQ,MAAT,CAAgBH,KAAhB,CADc,CAAhB;AAGAxB,UAAAA,OAAO,CAACC,GAAR,CAAYwB,SAAZ;AACAjB,UAAAA,OAAO,CAACoB,IAAI,CAACC,SAAL,CAAeJ,SAAf,EAA0BK,SAA1B,EAAqC,CAArC,CAAD,CAAP;AACD,SAND;AAOD,OAXD;AAYD;AACF,GAlBD;;AAoBA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B1B,IAAAA,eAAe,CAAC0B,CAAC,CAACf,MAAF,CAASgB,KAAT,CAAe,CAAf,CAAD,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,YAA1B;AAAuC,MAAA,QAAQ,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEtB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;GAAMR,K;;KAAAA,K;AA+CN,eAAeA,KAAf","sourcesContent":["import XLSX from \"xlsx\";\nimport React, { useState } from \"react\";\nlet dummy = [\n  {\n    name: \"jayanth\",\n    data: \"scd\",\n    abc: \"sdef\",\n  },\n];\n\nconst Excel = () => {\n  console.log(window.XLSX);\n  const [dummyData, setDummyData] = useState(dummy);\n  const [selectedFile, setSelectedFile] = useState();\n  const [json, setJson] = useState();\n\n  // let data = [\n  //   {\n  //     name: \"jayanth\",\n  //     data: \"scd\",\n  //     abc: \"sdef\",\n  //   },\n  // ];\n\n  const handleClick = () => {\n    XLSX.utils.json_to_sheet(dummyData, \"out.xlsx\");\n    if (selectedFile) {\n      let fileReader = new FileReader();\n      fileReader.readAsBinaryString(selectedFile);\n      fileReader.onload = (event) => {\n        let data = event.target.result;\n        let workbook = XLSX.read(data, { type: \"binary\" });\n        console.log(workbook);\n        workbook.SheetNames.forEach((sheet) => {\n          let rowObject = XLSX.utils.sheet_to_row_object_array(\n            workbook.Sheets[sheet]\n          );\n          console.log(rowObject);\n          setJson(JSON.stringify(rowObject, undefined, 4));\n        });\n      };\n    }\n  };\n\n  const handleChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".xls,.xlsx\" onChange={handleChange} />\n      <button onClick={handleClick}>Convert</button>\n      <div>{json}</div>\n    </div>\n  );\n};\n\nexport default Excel;\n"]},"metadata":{},"sourceType":"module"}