{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst RoleContext = /*#__PURE__*/createContext(\"guest\");\nexport function RoleProvider({\n  children\n}) {\n  _s();\n\n  const [role, setRole] = useState(\"guest\");\n  const {\n    user\n  } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(`https://callback-cats.herokuapp.com/users`);\n      setResult(await data.json());\n      result.data === undefined ? setRole(\"guest\") : setRole(result.data.role);\n    }\n\n    getUsers(); //loggedUser is the Auth0 information\n  }, [loggedUser, role, user, result.data]);\n  return /*#__PURE__*/_jsxDEV(RoleContext.Provider, {\n    value: [role, setRole, loggedUser, result],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoleProvider, \"xnPUtgqpngdL1T32o4qmHlZSZ+U=\", false, function () {\n  return [useAuth0];\n});\n\n_c = RoleProvider;\nexport default function useRoleContext() {\n  _s2();\n\n  return useContext(RoleContext);\n}\n\n_s2(useRoleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleProvider\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/context/roleContext.js"],"names":["React","useState","createContext","useContext","useEffect","useAuth0","RoleContext","RoleProvider","children","role","setRole","user","loggedUser","setLoggedUser","result","setResult","getUsers","data","fetch","json","undefined","useRoleContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,OAAD,CAAjC;AAEA,OAAO,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAWN,QAAQ,EAAzB;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,QAAf,GAA0B;AACxBH,MAAAA,aAAa,CAACF,IAAD,CAAb;AACA,YAAMM,IAAI,GAAG,MAAMC,KAAK,CAAE,2CAAF,CAAxB;AACAH,MAAAA,SAAS,CAAC,MAAME,IAAI,CAACE,IAAL,EAAP,CAAT;AACAL,MAAAA,MAAM,CAACG,IAAP,KAAgBG,SAAhB,GAA4BV,OAAO,CAAC,OAAD,CAAnC,GAA+CA,OAAO,CAACI,MAAM,CAACG,IAAP,CAAYR,IAAb,CAAtD;AACD;;AACDO,IAAAA,QAAQ,GAPM,CAQd;AACD,GATQ,EASN,CAACJ,UAAD,EAAaH,IAAb,EAAmBE,IAAnB,EAAyBG,MAAM,CAACG,IAAhC,CATM,CAAT;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACR,IAAD,EAAOC,OAAP,EAAgBE,UAAhB,EAA4BE,MAA5B,CAA7B;AAAA,cACGN;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBeD,Y;UAEGF,Q;;;KAFHE,Y;AAwBhB,eAAe,SAASc,cAAT,GAA0B;AAAA;;AACvC,SAAOlB,UAAU,CAACG,WAAD,CAAjB;AACD;;IAFuBe,c","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst RoleContext = createContext(\"guest\");\n\nexport function RoleProvider({ children }) {\n  const [role, setRole] = useState(\"guest\");\n  const { user } = useAuth0();\n  const [loggedUser, setLoggedUser] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    async function getUsers() {\n      setLoggedUser(user);\n      const data = await fetch(`https://callback-cats.herokuapp.com/users`);\n      setResult(await data.json());\n      result.data === undefined ? setRole(\"guest\") : setRole(result.data.role);\n    }\n    getUsers();\n    //loggedUser is the Auth0 information\n  }, [loggedUser, role, user, result.data]);\n\n  return (\n    <RoleContext.Provider value={[role, setRole, loggedUser, result]}>\n      {children}\n    </RoleContext.Provider>\n  );\n}\n\nexport default function useRoleContext() {\n  return useContext(RoleContext);\n}\n"]},"metadata":{},"sourceType":"module"}