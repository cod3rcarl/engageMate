{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionTable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./index.module.css\";\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Icon } from \"@chakra-ui/react\";\nimport { IoTrashBinOutline } from \"react-icons/io5\";\n\nfunction SessionTable({\n  tableData,\n  deleteSession\n}) {\n  _s();\n\n  // START OF FILTER FUNCTIONALITY (Consider making it its own component or possibly a custom hook).\n  const [criteria, setCriteria] = useState(\"date\"); // date, question, coach, throwaway\n\n  const [inputType, setInputType] = useState(\"date\"); // date, text\n\n  const [term, setTerm] = useState(\"\"); // Search term entered into input\n\n  const [filteredData, setFilteredData] = useState(tableData); // holds the filtered data, by default is given all tableData\n\n  /**\r\n   *  Sets the criteria useState and also set the inputType\r\n   *  useState which determines which type of input is rendered.\r\n   */\n\n  function setup(value) {\n    setTerm(\"\");\n    setCriteria(value);\n\n    switch (value) {\n      case \"date\":\n        setInputType(\"date\");\n        break;\n\n      case \"throwaway\":\n        setInputType(\"checkbox\");\n        break;\n\n      default:\n        setInputType(\"text\");\n    }\n  }\n  /**\r\n   *  Sets what data is held in the filteredData useState.\r\n   *  Uses the term useState to filter the tablData.\r\n   *  If no term, then whole tableData is returned.\r\n   */\n\n\n  function filterSessions() {\n    if (term === \"\") return tableData;\n    return tableData.filter(session => {\n      if (criteria === \"date\") {\n        // Remove the 'th' from the date string\n        const dateString = session.date.replace(/th/, \"\"); // Convert to YYYY-MM-DD to be same format as date input\n\n        const convertedDate = new Date(dateString).toISOString();\n        return convertedDate.includes(term);\n      } else if (criteria === \"throwaway\") {\n        const value = session[criteria];\n        return value === term;\n      } else {\n        const value = session[criteria];\n        return String(value).toLowerCase().includes(term.toLowerCase());\n      }\n    });\n  } // END OF FILTER FUNCTIONALITY\n\n\n  useEffect(() => {\n    setFilteredData(filterSessions());\n  }, [term, tableData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.filterDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter By:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.filterInputs,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"\",\n          onChange: e => setup(e.target.value),\n          className: style.select,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"question\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"coach\",\n            children: \"Coach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"throwaway\",\n            children: \"Throwaway\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: criteria === \"throwaway\" ? style.checkbox : style.input,\n          type: inputType,\n          value: term,\n          onChange: e => {\n            if (criteria === \"throwaway\") {\n              setTerm(e.target.checked);\n            } else {\n              setTerm(e.target.value);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"simple\",\n      children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n        placement: \"top\",\n        children: \"Previous Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Outcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Coach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Participants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Responses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Throwaway\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: filteredData.map((session, index) => {\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                as: IoTrashBinOutline,\n                onClick: () => deleteSession(session.uuid)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.outcome + \"%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.coach\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.participants\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.responses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: session.throwaway ? \" ✅ \" : \"❌ \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SessionTable, \"dhbjp7w0C3E+6TSkoPPWcbM4Pf0=\");\n\n_c = SessionTable;\nexport default SessionTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionTable\");","map":{"version":3,"sources":["/Users/mcintosh/Desktop/Final/front-end-final-project-callback-cats/thumb-o-meter/src/components/sessionTable/index.js"],"names":["React","useState","useEffect","style","Table","Thead","Tbody","Tr","Th","Td","TableCaption","Icon","IoTrashBinOutline","SessionTable","tableData","deleteSession","criteria","setCriteria","inputType","setInputType","term","setTerm","filteredData","setFilteredData","setup","value","filterSessions","filter","session","dateString","date","replace","convertedDate","Date","toISOString","includes","String","toLowerCase","filterDiv","filterInputs","e","target","select","checkbox","input","checked","map","index","uuid","question","outcome","coach","participants","responses","throwaway"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport style from \"./index.module.css\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { IoTrashBinOutline } from \"react-icons/io5\";\r\n\r\nfunction SessionTable({ tableData, deleteSession }) {\r\n  // START OF FILTER FUNCTIONALITY (Consider making it its own component or possibly a custom hook).\r\n\r\n  const [criteria, setCriteria] = useState(\"date\"); // date, question, coach, throwaway\r\n  const [inputType, setInputType] = useState(\"date\"); // date, text\r\n  const [term, setTerm] = useState(\"\"); // Search term entered into input\r\n  const [filteredData, setFilteredData] = useState(tableData); // holds the filtered data, by default is given all tableData\r\n\r\n  /**\r\n   *  Sets the criteria useState and also set the inputType\r\n   *  useState which determines which type of input is rendered.\r\n   */\r\n  function setup(value) {\r\n    setTerm(\"\");\r\n    setCriteria(value);\r\n    switch (value) {\r\n      case \"date\":\r\n        setInputType(\"date\");\r\n        break;\r\n      case \"throwaway\":\r\n        setInputType(\"checkbox\");\r\n        break;\r\n      default:\r\n        setInputType(\"text\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Sets what data is held in the filteredData useState.\r\n   *  Uses the term useState to filter the tablData.\r\n   *  If no term, then whole tableData is returned.\r\n   */\r\n  function filterSessions() {\r\n    if (term === \"\") return tableData;\r\n\r\n    return tableData.filter((session) => {\r\n      if (criteria === \"date\") {\r\n        // Remove the 'th' from the date string\r\n        const dateString = session.date.replace(/th/, \"\");\r\n\r\n        // Convert to YYYY-MM-DD to be same format as date input\r\n        const convertedDate = new Date(dateString).toISOString();\r\n\r\n        return convertedDate.includes(term);\r\n      } else if (criteria === \"throwaway\") {\r\n        const value = session[criteria];\r\n        return value === term;\r\n      } else {\r\n        const value = session[criteria];\r\n        return String(value).toLowerCase().includes(term.toLowerCase());\r\n      }\r\n    });\r\n  }\r\n\r\n  // END OF FILTER FUNCTIONALITY\r\n\r\n  useEffect(() => {\r\n    setFilteredData(filterSessions());\r\n  }, [term, tableData]);\r\n\r\n  return (\r\n    <>\r\n      {/* FILTER STARTS HERE */}\r\n      <div className={style.filterDiv}>\r\n        <h3>Filter By:</h3>\r\n        <div className={style.filterInputs}>\r\n          <select\r\n            name=\"\"\r\n            id=\"\"\r\n            onChange={(e) => setup(e.target.value)}\r\n            className={style.select}\r\n          >\r\n            <option value=\"date\">Date</option>\r\n            <option value=\"question\">Question</option>\r\n            <option value=\"coach\">Coach</option>\r\n            <option value=\"throwaway\">Throwaway</option>\r\n          </select>\r\n          <input\r\n            className={criteria === \"throwaway\" ? style.checkbox : style.input}\r\n            type={inputType}\r\n            value={term}\r\n            onChange={(e) => {\r\n              if (criteria === \"throwaway\") {\r\n                setTerm(e.target.checked);\r\n              } else {\r\n                setTerm(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* FILTER ENDS HERE */}\r\n\r\n      <Table variant=\"simple\">\r\n        <TableCaption placement=\"top\">Previous Sessions</TableCaption>\r\n        <Thead>\r\n          <Tr>\r\n            <Th></Th>\r\n            <Th>Date</Th>\r\n            <Th>Question</Th>\r\n            <Th>Outcome</Th>\r\n            <Th>Coach</Th>\r\n            <Th>Participants</Th>\r\n            <Th>Responses</Th>\r\n            <Th>Throwaway</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {filteredData.map((session, index) => {\r\n            return (\r\n              <Tr key={index}>\r\n                <Td>\r\n                  <Icon\r\n                    as={IoTrashBinOutline}\r\n                    onClick={() => deleteSession(session.uuid)}\r\n                  />\r\n                </Td>\r\n                <Td>{session.date}</Td>\r\n                <Td>{session.question}</Td>\r\n                <Td>{session.outcome + \"%\"}</Td>\r\n                <Td>{session.coach}</Td>\r\n                <Td>{session.participants}</Td>\r\n                <Td>{session.responses}</Td>\r\n                <Td>{session.throwaway ? \" ✅ \" : \"❌ \"}</Td>\r\n              </Tr>\r\n            );\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SessionTable;\r\n"]},"metadata":{},"sourceType":"module"}